<<<<<<< HEAD
=======
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fced7e2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fced7e2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fced7e2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2fced7e2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12632994]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1576034179 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12632994]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12632994]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12632994]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12632994]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d1bddb]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1249709087 wrapping com.mysql.cj.jdbc.ConnectionImpl@1b10f5e7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d1bddb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d1bddb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d1bddb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d1bddb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef1757f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1814053937 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.selectShopByOrder]==>  Preparing: SELECT shop_commodity.shop_id FROM order_item INNER JOIN orders ON order_item.order_id = orders.ID INNER JOIN shop_commodity ON order_item.commodity_id = shop_commodity.commodity_id WHERE orders.ID = ? AND order_item.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.selectShopByOrder]==> Parameters: 24(String), 37(String)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.selectShopByOrder]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef1757f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef1757f] from current transaction
[DEBUG][20-07-22][lexian.mapper.OrderMapper.applyCustomerJiufenOrder]==>  Preparing: INSERT INTO jiufen(customer_id,order_id,shop_id,reason,applyTime,status,is_delete) VALUES (?,?,?,?,?,0,0) 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.applyCustomerJiufenOrder]==> Parameters: 1(Integer), 24(String), 2(Integer), 商品信息描述不符 : (String), 2020-07-22 14:29:26(String)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.applyCustomerJiufenOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef1757f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef1757f] from current transaction
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]==>  Preparing: UPDATE orders, order_item SET order_item.status = ? WHERE orders.ID = ? AND order_item.order_id = orders.ID AND order_item.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]==> Parameters: 5(Integer), 24(String), 37(String)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef1757f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef1757f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef1757f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ef1757f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df14c6b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1866424086 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df14c6b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df14c6b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df14c6b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df14c6b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17ceb924]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1608280399 wrapping com.mysql.cj.jdbc.ConnectionImpl@1b10f5e7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17ceb924]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17ceb924]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17ceb924]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17ceb924]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f877d0]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1757379965 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f877d0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f877d0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f877d0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67f877d0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7efa8446]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@611120042 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getIndexActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity where activity.is_delete = 0 AND activity.id > 10 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getIndexActivity]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getIndexActivity]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7efa8446]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7efa8446]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7efa8446]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7efa8446]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11c602db]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@956832205 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getIndexCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getIndexCommodity]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getIndexCommodity]<==      Total: 84
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11c602db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11c602db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11c602db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11c602db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@165c6651]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1416716355 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 67(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@165c6651]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@165c6651]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@165c6651]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@165c6651]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48bb4cc5]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@179490913 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 67(String)
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48bb4cc5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48bb4cc5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48bb4cc5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48bb4cc5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b8abdd]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@480763618 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 67(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b8abdd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b8abdd] from current transaction
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 17(String), 17(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b8abdd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b8abdd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b8abdd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23b8abdd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@229ae2c3] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@6846652 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@229ae2c3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b2f708]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1436920506 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 67(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b2f708]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b2f708]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b2f708]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b2f708]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170668c1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@635826110 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 67(Integer), 1(Integer), 2020-07-22 14:29:58.043(Timestamp), 0(Integer), 2020-07-22 14:29:58.043(Timestamp)
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170668c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170668c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170668c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170668c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58770f6b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1085057066 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 27
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58770f6b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58770f6b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58770f6b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58770f6b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58101173]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1601409353 wrapping com.mysql.cj.jdbc.ConnectionImpl@1b10f5e7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 27
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58101173]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58101173]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58101173]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58101173]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ca12778]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1908223215 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ca12778]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ca12778]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ca12778]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ca12778]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebdf18a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1971068556 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectById]==>  Preparing: select ID, province, city, area, location, postcode, name, phone, is_delete from address where ID = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectById]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebdf18a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebdf18a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebdf18a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ebdf18a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2657e907]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@305151619 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.update]==>  Preparing: update address set province = ?,city = ?,area = ?,location = ?,postcode = ?,name = ? ,phone = ? where ID = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.update]==> Parameters: 湖北省(String), 武汉市(String), 武昌区(String), 安国路耀江花园(String), 430061(Integer), 张木兰(String), 13978654123(String), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.update]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2657e907]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2657e907]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2657e907]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2657e907]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e07dda4]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1760582551 wrapping com.mysql.cj.jdbc.ConnectionImpl@1b10f5e7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 27
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e07dda4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e07dda4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e07dda4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e07dda4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3267445f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@337161816 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3267445f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3267445f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3267445f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3267445f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb76ce7]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@712788864 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 27
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb76ce7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb76ce7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb76ce7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb76ce7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2414ba6d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@405493308 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 27
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2414ba6d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2414ba6d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2414ba6d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2414ba6d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e456209]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@722631857 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e456209]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e456209]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e456209]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e456209]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74eaaf38]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@700110657 wrapping com.mysql.cj.jdbc.ConnectionImpl@1b10f5e7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74eaaf38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74eaaf38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74eaaf38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74eaaf38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a2f3f3a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1226221293 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.cancelFavorite]==>  Preparing: UPDATE favorites SET is_delete = 1 WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.cancelFavorite]==> Parameters: 41(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.cancelFavorite]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a2f3f3a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a2f3f3a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a2f3f3a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a2f3f3a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65bc2930]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2105041387 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65bc2930]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65bc2930]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65bc2930]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65bc2930]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ac258d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@221918576 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 27
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ac258d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ac258d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ac258d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9ac258d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26a253ec] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@617114044 wrapping com.mysql.cj.jdbc.ConnectionImpl@1b10f5e7] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.updateUserInfo]==>  Preparing: UPDATE customer SET nick_name = ?, email = ?, sex = ?, phone = ?, user_image = ? WHERE ID = ? 
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.updateUserInfo]==> Parameters: XinYi666(String), xiny091966@163.com(String), 1(Integer), 18624065210(String), https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1595088688219&di=8b2816726f0436f92edf12ba33fb38fc&imgtype=0&src=http%3A%2F%2Fp2.so.qhimgs1.com%2Ft01dfcbc38578dac4c2.jpg(String), 1(Integer)
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25545f14] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1494079938 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.updateUserInfo]==>  Preparing: UPDATE customer SET nick_name = ?, email = ?, sex = ?, phone = ?, user_image = ? WHERE ID = ? 
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.updateUserInfo]==> Parameters: XinYi666(String), xiny091966@163.com(String), 1(Integer), 18624065210(String), https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1595088688219&di=8b2816726f0436f92edf12ba33fb38fc&imgtype=0&src=http%3A%2F%2Fp2.so.qhimgs1.com%2Ft01dfcbc38578dac4c2.jpg(String), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.updateUserInfo]<==    Updates: 1
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.updateUserInfo]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26a253ec]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25545f14]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13b681d7]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1110185494 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 27
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13b681d7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13b681d7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13b681d7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13b681d7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@245471aa]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1833337691 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 27
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@245471aa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@245471aa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@245471aa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@245471aa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcfff5f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@65825923 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getIndexSearchCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getIndexSearchCommodity]==> Parameters: %手机%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getIndexSearchCommodity]<==      Total: 27
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcfff5f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcfff5f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcfff5f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcfff5f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69824c60]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2076457130 wrapping com.mysql.cj.jdbc.ConnectionImpl@1b10f5e7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getIndexSearchCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getIndexSearchCommodity]==> Parameters: %手机%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getIndexSearchCommodity]<==      Total: 27
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69824c60]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69824c60]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69824c60]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69824c60]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57741f68]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1537108835 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57741f68]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57741f68]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57741f68]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57741f68]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3af6f21d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2044077551 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3af6f21d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3af6f21d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3af6f21d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3af6f21d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e364895]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2017984820 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e364895]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e364895] from current transaction
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e364895]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e364895]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e364895]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e364895]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f96dde2] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@133114501 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f96dde2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fdbcd0d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@418300299 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fdbcd0d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fdbcd0d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fdbcd0d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6fdbcd0d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@be24677]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1482558390 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 1(Integer), 1(Integer), 2020-07-22 14:32:50.566(Timestamp), 0(Integer), 2020-07-22 14:32:50.566(Timestamp)
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@be24677]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@be24677]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@be24677]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@be24677]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f8b8f3]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1379957144 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getSalesItem]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN activity_commodity ON commodity.ID = activity_commodity.commodity_id WHERE commodity.is_delete=0 AND activity_commodity.is_delete=0 AND activity_commodity.activity_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getSalesItem]==> Parameters: 12(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getSalesItem]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f8b8f3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f8b8f3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f8b8f3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28f8b8f3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22758993]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@243661533 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getSalesItem]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN activity_commodity ON commodity.ID = activity_commodity.commodity_id WHERE commodity.is_delete=0 AND activity_commodity.is_delete=0 AND activity_commodity.activity_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getSalesItem]==> Parameters: 13(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getSalesItem]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22758993]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22758993]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22758993]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@22758993]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6855d714]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1477086721 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 12(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6855d714]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6855d714]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6855d714]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6855d714]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@209ffd0e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@927138344 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 12(String)
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@209ffd0e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@209ffd0e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@209ffd0e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@209ffd0e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d47ba86]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@374731417 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 12(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d47ba86]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d47ba86] from current transaction
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d47ba86]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d47ba86]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d47ba86]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d47ba86]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703bab9a] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1237540414 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703bab9a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@411eb278]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1068836784 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 12(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@411eb278]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@411eb278]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@411eb278]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@411eb278]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d6e503e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@853041600 wrapping com.mysql.cj.jdbc.ConnectionImpl@362e3346] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 12(Integer), 1(Integer), 2020-07-22 14:33:06.707(Timestamp), 0(Integer), 2020-07-22 14:33:06.707(Timestamp)
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d6e503e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d6e503e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d6e503e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d6e503e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@444b8006]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1087971386 wrapping com.mysql.cj.jdbc.ConnectionImpl@2823a256] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@444b8006]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@444b8006]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@444b8006]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@444b8006]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fe3987c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@672458435 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? order by oi.sales desc LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fe3987c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fe3987c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fe3987c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fe3987c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292bddbf]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1277620930 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? order by g.price LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292bddbf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292bddbf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292bddbf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@292bddbf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@419847e6]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@690325984 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? order by g.price desc LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@419847e6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@419847e6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@419847e6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@419847e6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@420c1cc6]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2066183484 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 15(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? order by g.price desc LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 15(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@420c1cc6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@420c1cc6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@420c1cc6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@420c1cc6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d8910fb]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1543915313 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d8910fb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d8910fb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d8910fb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d8910fb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49bb9116]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@782139930 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49bb9116]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49bb9116]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49bb9116]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49bb9116]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3359243c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2136014653 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3359243c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3359243c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3359243c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3359243c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67142f24]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@614476396 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67142f24]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67142f24] from current transaction
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67142f24]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67142f24]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67142f24]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67142f24]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e765712] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2074142202 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e765712]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@669457e0]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1984297342 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@669457e0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@669457e0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@669457e0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@669457e0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@624fd81]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1735014008 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 1(Integer), 1(Integer), 2020-07-22 14:34:58.729(Timestamp), 0(Integer), 2020-07-22 14:34:58.729(Timestamp)
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@624fd81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@624fd81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@624fd81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@624fd81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af19a0c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@697994871 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af19a0c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af19a0c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af19a0c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af19a0c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646a748e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@332430836 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646a748e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646a748e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646a748e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@646a748e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b0229f1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@14268940 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b0229f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b0229f1] from current transaction
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b0229f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b0229f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b0229f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b0229f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5be42814] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@371253438 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5be42814]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6303bc8c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@141146869 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6303bc8c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6303bc8c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6303bc8c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6303bc8c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af5f01b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1246097449 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 1(Integer), 1(Integer), 2020-07-22 14:35:16.737(Timestamp), 0(Integer), 2020-07-22 14:35:16.737(Timestamp)
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af5f01b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af5f01b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af5f01b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7af5f01b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41a53b13]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1183118703 wrapping com.mysql.cj.jdbc.ConnectionImpl@2823a256] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41a53b13]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41a53b13]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41a53b13]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41a53b13]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a851413] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1531687329 wrapping com.mysql.cj.jdbc.ConnectionImpl@2823a256] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a851413]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d43e764]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@154416037 wrapping com.mysql.cj.jdbc.ConnectionImpl@2823a256] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d43e764]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d43e764]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d43e764]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d43e764]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6924bea8]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@538148264 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6924bea8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6924bea8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6924bea8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6924bea8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@301101967 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]==>  Preparing: INSERT INTO orders(date,description,comment,status) VALUES (?,?,?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]==> Parameters: 2020-07-22 14:36:26.697(Timestamp), null, 0(Integer), 0(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]==>  Preparing: INSERT INTO shop_order(shop_id,order_id) values ( ?,? ) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]==> Parameters: 1(String), 35(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]==>  Preparing: insert into order_item(order_id,commodity_id,commodity_quantity,status) values ( ?,?,?,1 ) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]==> Parameters: 35(Integer), 1(String), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]==>  Preparing: insert into customer_order(order_id,customer_id) values(?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]==> Parameters: 35(Integer), 1(String)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]==>  Preparing: insert into order_address(order_id,address_id) values(?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]==> Parameters: 35(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@314f9c63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@636409f7]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@607749401 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]==>  Preparing: UPDATE orders, order_item SET order_item.status = ? WHERE orders.ID = ? AND order_item.order_id = orders.ID AND order_item.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]==> Parameters: 1(Integer), 35(String), null
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]<==    Updates: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@636409f7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@636409f7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@636409f7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@636409f7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68160d75] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@389173662 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]==>  Preparing: SELECT c.*,w.money_amount as moneyAmount,w.wallet_pwd as walletPwd,w.id as walletId FROM `customer` c left JOIN wallet w on c.ID = w.customer_id where c.ID = ? 
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68160d75]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf7d575]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@684742978 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 3(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf7d575]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf7d575]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf7d575]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf7d575]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55b0e6ff]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1837454229 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 3(String)
[DEBUG][20-07-22][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55b0e6ff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55b0e6ff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55b0e6ff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55b0e6ff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9735ab]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1456501766 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 3(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9735ab]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9735ab] from current transaction
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9735ab]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9735ab]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9735ab]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e9735ab]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd1749b] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@410278243 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dd1749b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35f5f77c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1237571759 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 3(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35f5f77c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35f5f77c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35f5f77c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35f5f77c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42865a96]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1460958628 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 3(Integer), 1(Integer), 2020-07-22 14:36:39.388(Timestamp), 0(Integer), 2020-07-22 14:36:39.388(Timestamp)
[DEBUG][20-07-22][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42865a96]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42865a96]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42865a96]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42865a96]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd8be79]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1657155052 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCart]==>  Preparing: select * from cart WHERE customer_id = ? and commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCart]==> Parameters: 1(Integer), 3(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCart]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd8be79]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd8be79] from current transaction
[DEBUG][20-07-22][lexian.mapper.CartMapper.update]==>  Preparing: update cart set customer_id = ?,commodity_id = ?,commodity_quantity = ? where id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.update]==> Parameters: 1(Integer), 3(Integer), 10(Integer), 3(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.update]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd8be79]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd8be79]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd8be79]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4bd8be79]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@222ef404]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1160329357 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.insert]==>  Preparing: insert into favorites(commodity_id, customer_id, addtime,is_delete) values(?,?,?,0) 
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.insert]==> Parameters: 3(Integer), 1(String), 2020-07-22 14:36:49.996(Timestamp)
[DEBUG][20-07-22][lexian.mapper.FavoritesMapper.insert]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@222ef404]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@222ef404]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@222ef404]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@222ef404]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b38025d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@640715760 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9016da1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@45524721 wrapping com.mysql.cj.jdbc.ConnectionImpl@2823a256] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9016da1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9016da1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9016da1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9016da1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b38025d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b38025d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b38025d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b38025d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68e09727]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@996806459 wrapping com.mysql.cj.jdbc.ConnectionImpl@2823a256] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 32
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68e09727]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68e09727]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68e09727]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68e09727]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aa1381e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6345805]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1204650049 wrapping com.mysql.cj.jdbc.ConnectionImpl@2823a256] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@901784502 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 7
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6345805]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aa1381e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aa1381e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aa1381e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7aa1381e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6345805]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6345805]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6345805]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e93f5ea]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@116112482 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d5d39fb] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 32
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e93f5ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e93f5ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e93f5ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e93f5ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34cd180a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@962645565 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 32
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34cd180a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34cd180a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34cd180a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34cd180a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b5ba621]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@780170353 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b5ba621]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b5ba621]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b5ba621]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b5ba621]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73c864c1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1410702612 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==>  Preparing: UPDATE cart SET isDelete = 1 WHERE commodity_id = ? AND commodity_quantity = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==> Parameters: 6(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73c864c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73c864c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73c864c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73c864c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5af361]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@733272195 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==>  Preparing: UPDATE cart SET isDelete = 1 WHERE commodity_id = ? AND commodity_quantity = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==> Parameters: 2(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5af361]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5af361]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5af361]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d5af361]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689bf68a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@477399894 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 5(String), 4(String), 3(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689bf68a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689bf68a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689bf68a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@689bf68a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@743c4201] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2008374371 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@743c4201]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3a78f5]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1997217358 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3a78f5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3a78f5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3a78f5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c3a78f5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@680216526 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]==>  Preparing: INSERT INTO orders(date,description,comment,status) VALUES (?,?,?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]==> Parameters: 2020-07-22 14:47:51.451(Timestamp), null, 0(Integer), 0(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]==>  Preparing: INSERT INTO shop_order(shop_id,order_id) values ( ?,? ) , ( ?,? ) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]==> Parameters: 1(String), 36(Integer), 2(String), 36(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]<==    Updates: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]==>  Preparing: insert into order_item(order_id,commodity_id,commodity_quantity,status) values ( ?,?,?,1 ) , ( ?,?,?,1 ) , ( ?,?,?,1 ) , ( ?,?,?,1 ) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]==> Parameters: 36(Integer), 1(String), 5(Integer), 36(Integer), 3(String), 10(Integer), 36(Integer), 4(String), 5(Integer), 36(Integer), 5(String), 5(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]<==    Updates: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]==>  Preparing: insert into customer_order(order_id,customer_id) values(?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]==> Parameters: 36(Integer), 1(String)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]==>  Preparing: insert into order_address(order_id,address_id) values(?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]==> Parameters: 36(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a70be89]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@89ccc6c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1537692043 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]==>  Preparing: UPDATE orders, order_item SET order_item.status = ? WHERE orders.ID = ? AND order_item.order_id = orders.ID AND order_item.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]==> Parameters: 1(Integer), 36(String), null
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]<==    Updates: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@89ccc6c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@89ccc6c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@89ccc6c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@89ccc6c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6febf114] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1092484993 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]==>  Preparing: SELECT c.*,w.money_amount as moneyAmount,w.wallet_pwd as walletPwd,w.id as walletId FROM `customer` c left JOIN wallet w on c.ID = w.customer_id where c.ID = ? 
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6febf114]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f05fdad]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2143597446 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f05fdad]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f05fdad]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f05fdad]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f05fdad]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0e0e87]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1561092321 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.clearCart]==>  Preparing: update cart set cart.isDelete = 1 where cart.`id` in ( ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.clearCart]==> Parameters: 5(Integer), 4(Integer), 3(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.clearCart]<==    Updates: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0e0e87]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0e0e87]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0e0e87]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0e0e87]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67fafdf9]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@125589872 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67fafdf9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67fafdf9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67fafdf9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67fafdf9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e2df12a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@675102498 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 32
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e2df12a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e2df12a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e2df12a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7e2df12a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c02ade]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@645247066 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c02ade]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c02ade]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c02ade]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23c02ade]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a4454ac]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1526226896 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a4454ac]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a4454ac]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a4454ac]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a4454ac]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@339076a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1320991695 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ad2b677] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@339076a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@339076a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@339076a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@339076a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6018523a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2114215955 wrapping com.mysql.cj.jdbc.ConnectionImpl@4bbbe613] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 32
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6018523a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6018523a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6018523a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6018523a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b06d2c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1185845810 wrapping com.mysql.cj.jdbc.ConnectionImpl@4bbbe613] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b06d2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b06d2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b06d2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58b06d2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@816360a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1218865549 wrapping com.mysql.cj.jdbc.ConnectionImpl@4bbbe613] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@816360a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@816360a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@816360a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@816360a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c2bed1b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@547754780 wrapping com.mysql.cj.jdbc.ConnectionImpl@4bbbe613] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c2bed1b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c2bed1b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c2bed1b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c2bed1b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47156a54]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@479618831 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970d357] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@670e4fa]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1595964658 wrapping com.mysql.cj.jdbc.ConnectionImpl@674185b4] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 32
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47156a54]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47156a54]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47156a54]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47156a54]
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 32
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@670e4fa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@670e4fa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@670e4fa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@670e4fa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bfe9c2c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1963407551 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970d357] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bfe9c2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bfe9c2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bfe9c2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bfe9c2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58bcc026]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1136726660 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970d357] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 32
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58bcc026]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58bcc026]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58bcc026]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58bcc026]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@635d07b3]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1750563299 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970d357] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@635d07b3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@635d07b3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@635d07b3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@635d07b3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a3a2aa5]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@444305263 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970d357] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 32
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a3a2aa5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a3a2aa5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a3a2aa5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a3a2aa5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5860ca23]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1413357517 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5860ca23]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5860ca23]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5860ca23]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5860ca23]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0cfe5d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@721769862 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==>  Preparing: UPDATE cart SET isDelete = 1 WHERE commodity_id = ? AND commodity_quantity = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==> Parameters: 1(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0cfe5d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0cfe5d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0cfe5d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0cfe5d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf2d5b4]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@477552744 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==>  Preparing: UPDATE cart SET isDelete = 1 WHERE commodity_id = ? AND commodity_quantity = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==> Parameters: 2(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf2d5b4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf2d5b4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf2d5b4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cf2d5b4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54213e37]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1664960315 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==>  Preparing: UPDATE cart SET isDelete = 1 WHERE commodity_id = ? AND commodity_quantity = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==> Parameters: 6(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54213e37]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54213e37]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54213e37]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@54213e37]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43efd0ef]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@739098555 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 4(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43efd0ef]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43efd0ef]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43efd0ef]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43efd0ef]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e2f6687]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1357357142 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 3(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e2f6687]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e2f6687]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e2f6687]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3e2f6687]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bfbd07f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2112701240 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 2(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bfbd07f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bfbd07f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bfbd07f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bfbd07f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62b3dd1e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@729141027 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 5(String), 4(String), 3(String)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62b3dd1e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62b3dd1e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62b3dd1e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62b3dd1e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@390a0613] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1474503588 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@390a0613]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c2d51a4]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1531844020 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c2d51a4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c2d51a4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c2d51a4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c2d51a4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@159311804 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]==>  Preparing: INSERT INTO orders(date,description,comment,status) VALUES (?,?,?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]==> Parameters: 2020-07-22 14:52:04.552(Timestamp), null, 0(Integer), 0(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]==>  Preparing: INSERT INTO shop_order(shop_id,order_id) values ( ?,? ) , ( ?,? ) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]==> Parameters: 1(String), 35(Integer), 2(String), 35(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]<==    Updates: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]==>  Preparing: insert into order_item(order_id,commodity_id,commodity_quantity,status) values ( ?,?,?,1 ) , ( ?,?,?,1 ) , ( ?,?,?,1 ) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]==> Parameters: 35(Integer), 3(String), 5(Integer), 35(Integer), 4(String), 5(Integer), 35(Integer), 5(String), 2(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]<==    Updates: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]==>  Preparing: insert into customer_order(order_id,customer_id) values(?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]==> Parameters: 35(Integer), 1(String)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]==>  Preparing: insert into order_address(order_id,address_id) values(?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]==> Parameters: 35(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4574f634]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f6c475]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1947688512 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]==>  Preparing: UPDATE orders, order_item SET order_item.status = ? WHERE orders.ID = ? AND order_item.order_id = orders.ID AND order_item.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]==> Parameters: 1(Integer), 35(String), null
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]<==    Updates: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f6c475]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f6c475]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f6c475]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43f6c475]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b5a48f7] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1290695023 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]==>  Preparing: SELECT c.*,w.money_amount as moneyAmount,w.wallet_pwd as walletPwd,w.id as walletId FROM `customer` c left JOIN wallet w on c.ID = w.customer_id where c.ID = ? 
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b5a48f7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f8eec6]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1246008215 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f8eec6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f8eec6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f8eec6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f8eec6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67aaa351]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@918029100 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.clearCart]==>  Preparing: update cart set cart.isDelete = 1 where cart.`id` in ( ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.clearCart]==> Parameters: 5(Integer), 4(Integer), 3(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.clearCart]<==    Updates: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67aaa351]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67aaa351]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67aaa351]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67aaa351]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@462a89a0]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@642630702 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@462a89a0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@462a89a0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@462a89a0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@462a89a0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8393676]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@818259520 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8393676]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8393676]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8393676]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8393676]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4945cae]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@136058152 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4945cae]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4945cae]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4945cae]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4945cae]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4802b9f0]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@25416350 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4802b9f0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4802b9f0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4802b9f0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4802b9f0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1de8d27a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1005774796 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1de8d27a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1de8d27a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1de8d27a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1de8d27a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59d8038c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@526814657 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 6(String), 5(String), 4(String), 3(String), 2(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59d8038c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59d8038c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59d8038c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59d8038c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ea57f00] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@972264449 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ea57f00]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33a90075]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1138226982 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33a90075]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33a90075]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33a90075]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33a90075]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2927d4cd]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1961579208 wrapping com.mysql.cj.jdbc.ConnectionImpl@4d6bdfac] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2927d4cd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2927d4cd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2927d4cd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2927d4cd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e72a2b2]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1647963311 wrapping com.mysql.cj.jdbc.ConnectionImpl@1460426e] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==>  Preparing: UPDATE cart SET isDelete = 1 WHERE commodity_id = ? AND commodity_quantity = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==> Parameters: 4(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e72a2b2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e72a2b2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e72a2b2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5e72a2b2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@233458eb]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1854354843 wrapping com.mysql.cj.jdbc.ConnectionImpl@1460426e] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 6(String), 5(String), 3(String), 2(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@233458eb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@233458eb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@233458eb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@233458eb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38890240] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1503726067 wrapping com.mysql.cj.jdbc.ConnectionImpl@1460426e] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38890240]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f7ea7ce]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1319784435 wrapping com.mysql.cj.jdbc.ConnectionImpl@1460426e] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f7ea7ce]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f7ea7ce]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f7ea7ce]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f7ea7ce]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f1aebbf]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@360181076 wrapping com.mysql.cj.jdbc.ConnectionImpl@1460426e] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f1aebbf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f1aebbf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f1aebbf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f1aebbf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@252ce89c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1411136819 wrapping com.mysql.cj.jdbc.ConnectionImpl@39c6ec05] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@252ce89c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@252ce89c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@252ce89c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@252ce89c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c5e965]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1216227048 wrapping com.mysql.cj.jdbc.ConnectionImpl@1c6e49f3] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c5e965]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c5e965]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c5e965]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c5e965]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e7c709]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@842279052 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==>  Preparing: UPDATE cart SET isDelete = 1 WHERE commodity_id = ? AND commodity_quantity = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==> Parameters: 6(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e7c709]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e7c709]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e7c709]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e7c709]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@332eef5f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@155121300 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 4(Integer), 3(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@332eef5f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@332eef5f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@332eef5f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@332eef5f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab79210]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@969472175 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 3(Integer), 3(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab79210]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab79210]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab79210]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ab79210]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@388002af]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1642653047 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 2(Integer), 3(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@388002af]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@388002af]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@388002af]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@388002af]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18df816]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1678182835 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 5(String), 3(String), 2(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18df816]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18df816]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18df816]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18df816]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42cbaf70] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1455575910 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42cbaf70]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63a83152]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@941266941 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63a83152]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63a83152]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63a83152]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63a83152]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c99897c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@655164853 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c99897c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c99897c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c99897c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c99897c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7c230c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1879937703 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 3(Integer), 3(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7c230c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7c230c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7c230c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a7c230c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9c9c77b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@250465838 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 4(Integer), 3(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9c9c77b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9c9c77b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9c9c77b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9c9c77b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423d0659]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2044011174 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 5(String), 3(String), 2(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423d0659]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423d0659]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423d0659]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@423d0659]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cde92ae] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1363807395 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cde92ae]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de22f0c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@71281385 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de22f0c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de22f0c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de22f0c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3de22f0c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b26574]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@571325942 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b26574]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b26574]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b26574]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75b26574]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57e67461]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@679353544 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57e67461]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57e67461]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57e67461]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57e67461]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79602f24]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1783092529 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79602f24]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79602f24]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79602f24]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79602f24]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4aade264]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@601626927 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4aade264]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4aade264]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4aade264]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4aade264]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@471c040f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1917581914 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 5(String), 3(String), 2(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@471c040f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@471c040f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@471c040f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@471c040f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25b0b00d] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@47098776 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25b0b00d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@720d0fcd]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@637016809 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@720d0fcd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@720d0fcd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@720d0fcd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@720d0fcd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34f4333d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@426252191 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34f4333d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34f4333d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34f4333d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34f4333d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48d74b2c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1958073459 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ee1c96b]
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1786845988 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48d74b2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48d74b2c]
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48d74b2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48d74b2c]
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ee1c96b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ee1c96b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ee1c96b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ee1c96b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c14f7cf]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@202849814 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c14f7cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c14f7cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c14f7cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c14f7cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f253a45]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@254004977 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 6(String), 5(String), 4(String), 3(String), 2(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f253a45]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f253a45]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f253a45]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f253a45]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f6cf19] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1903236145 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15f6cf19]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a88d098]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1074532702 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a88d098]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a88d098]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a88d098]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a88d098]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2650e80c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@927156312 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2650e80c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2650e80c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2650e80c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2650e80c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6a8c8b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1769176083 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6a8c8b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6a8c8b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6a8c8b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6a8c8b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c360161]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1961388231 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c360161]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c360161]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c360161]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2c360161]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df59fd2]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@803030681 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 6(String), 5(String), 4(String), 3(String), 2(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df59fd2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df59fd2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df59fd2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df59fd2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1180c695] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1344523903 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1180c695]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6371172c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@986495354 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6371172c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6371172c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6371172c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6371172c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40513e8a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@418489060 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40513e8a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40513e8a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40513e8a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40513e8a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fc761b1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@487449227 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31324053]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fc761b1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fc761b1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fc761b1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fc761b1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@37614362 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31324053]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31324053]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31324053]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31324053]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2823827c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647ad70f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1711248095 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@368852889 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647ad70f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2823827c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647ad70f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2823827c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647ad70f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2823827c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2823827c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@647ad70f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ced2c20]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1865111766 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ced2c20]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ced2c20]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b856126]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ced2c20]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ced2c20]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@193960628 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b856126]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b856126]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b856126]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b856126]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cc3c2e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1514614467 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41ce578]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@94139738 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cc3c2e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cc3c2e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cc3c2e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cc3c2e]
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41ce578]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41ce578]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41ce578]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@41ce578]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3913dc81]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@74901605 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==>  Preparing: UPDATE cart SET isDelete = 1 WHERE commodity_id = ? AND commodity_quantity = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==> Parameters: 5(Integer), 2(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3913dc81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3913dc81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3913dc81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3913dc81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a35508b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2086210806 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a35508b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a35508b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a35508b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a35508b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4db8a60e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2098859780 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4db8a60e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4db8a60e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4db8a60e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4db8a60e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15bdbf3b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@767572341 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 6(String), 4(String), 3(String), 2(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15bdbf3b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15bdbf3b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15bdbf3b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15bdbf3b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@111d4e39] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@346726808 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@111d4e39]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a4cf5d1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1622988789 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a4cf5d1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a4cf5d1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a4cf5d1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a4cf5d1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74c0a883]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1160028307 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74c0a883]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74c0a883]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74c0a883]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74c0a883]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57293030]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1908536005 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33431597]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@545577860 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57293030]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57293030]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57293030]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@57293030]
[DEBUG][20-07-22][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 26
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33431597]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33431597]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33431597]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@33431597]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@265df944]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1875941305 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@265df944]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@265df944]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@265df944]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@265df944]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fba1598]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@104172234 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==>  Preparing: UPDATE cart SET isDelete = 1 WHERE commodity_id = ? AND commodity_quantity = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]==> Parameters: 6(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.deleteCartItem]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fba1598]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fba1598]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fba1598]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fba1598]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee4b0db]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@581824120 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 4(String), 3(String), 2(String), 1(String)
[DEBUG][20-07-22][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee4b0db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee4b0db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee4b0db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ee4b0db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba561] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1231119482 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ba561]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5be04e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@623284451 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5be04e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5be04e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5be04e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a5be04e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@728ba400]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1852049230 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@728ba400]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@728ba400]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@728ba400]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@728ba400]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@656449683 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]==>  Preparing: INSERT INTO orders(date,description,comment,status) VALUES (?,?,?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]==> Parameters: 2020-07-22 14:58:54.166(Timestamp), null, 0(Integer), 0(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]==>  Preparing: INSERT INTO shop_order(shop_id,order_id) values ( ?,? ) , ( ?,? ) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]==> Parameters: 1(String), 36(Integer), 2(String), 36(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertShopOrder]<==    Updates: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]==>  Preparing: insert into order_item(order_id,commodity_id,commodity_quantity,status) values ( ?,?,?,1 ) , ( ?,?,?,1 ) , ( ?,?,?,1 ) , ( ?,?,?,1 ) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]==> Parameters: 36(Integer), 1(String), 5(Integer), 36(Integer), 3(String), 4(Integer), 36(Integer), 2(String), 5(Integer), 36(Integer), 4(String), 5(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderItem]<==    Updates: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]==>  Preparing: insert into customer_order(order_id,customer_id) values(?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]==> Parameters: 36(Integer), 1(String)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertCustomeOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755] from current transaction
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]==>  Preparing: insert into order_address(order_id,address_id) values(?,?) 
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]==> Parameters: 36(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.PaymentMapper.insertOrderAddress]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f21755]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e61299]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@4959217 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]==>  Preparing: UPDATE orders, order_item SET order_item.status = ? WHERE orders.ID = ? AND order_item.order_id = orders.ID AND order_item.commodity_id = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]==> Parameters: 1(Integer), 36(String), null
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrderState]<==    Updates: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e61299]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e61299]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e61299]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53e61299]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4088a618] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@658321571 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will not be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]==>  Preparing: SELECT c.*,w.money_amount as moneyAmount,w.wallet_pwd as walletPwd,w.id as walletId FROM `customer` c left JOIN wallet w on c.ID = w.customer_id where c.ID = ? 
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.CustomerMapper.selectById]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4088a618]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58c3461f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@768742348 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58c3461f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58c3461f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58c3461f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58c3461f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@204a404c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1395720416 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 4(Integer), 4(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@204a404c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@204a404c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@204a404c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@204a404c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50905cb1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@361016741 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 3(Integer), 4(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50905cb1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50905cb1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50905cb1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50905cb1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@485d50de]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1278187949 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 2(Integer), 4(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@485d50de]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@485d50de]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@485d50de]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@485d50de]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53c696a3]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1576130902 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.clearCart]==>  Preparing: update cart set cart.isDelete = 1 where cart.`id` in ( ? , ? , ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.CartMapper.clearCart]==> Parameters: 4(Integer), 3(Integer), 2(Integer), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.clearCart]<==    Updates: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53c696a3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53c696a3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53c696a3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53c696a3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4123cbc4]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2052686021 wrapping com.mysql.cj.jdbc.ConnectionImpl@199d0245] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4123cbc4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4123cbc4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4123cbc4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4123cbc4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72abfbeb]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@971027881 wrapping com.mysql.cj.jdbc.ConnectionImpl@73d6544] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==>  Preparing: select shop_manager.ID,shop_manager.name,shop_manager.age, shop_manager.sex, shop_manager.pwd,shop_manager.nick_name, shop_manager.user_image, shop_manager.birthday, shop_manager.phone, shop_manager.login_name,shop_manager.is_delete from shop_manager where shop_manager.ID = ? and shop_manager.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72abfbeb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72abfbeb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72abfbeb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72abfbeb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@247d2069]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1465913836 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@247d2069]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@247d2069] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@247d2069]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@247d2069] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@247d2069]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@247d2069]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@247d2069]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@247d2069]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f7724a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@358233813 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==>  Preparing: select shop_manager.ID,shop_manager.name,shop_manager.age, shop_manager.sex, shop_manager.pwd,shop_manager.nick_name, shop_manager.user_image, shop_manager.birthday, shop_manager.phone, shop_manager.login_name,shop_manager.is_delete from shop_manager where shop_manager.ID = ? and shop_manager.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f7724a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f7724a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f7724a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f7724a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32fce467]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1432569240 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CartMapper.loadCart]<==      Total: 0
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32fce467]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32fce467]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32fce467]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32fce467]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16c0f765]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@112155999 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==>  Preparing: select shop_manager.ID,shop_manager.name,shop_manager.age, shop_manager.sex, shop_manager.pwd,shop_manager.nick_name, shop_manager.user_image, shop_manager.birthday, shop_manager.phone, shop_manager.login_name,shop_manager.is_delete from shop_manager where shop_manager.ID = ? and shop_manager.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16c0f765]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16c0f765]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16c0f765]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16c0f765]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30b2d1ca]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1352896871 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30b2d1ca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30b2d1ca] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30b2d1ca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30b2d1ca] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30b2d1ca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30b2d1ca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30b2d1ca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30b2d1ca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c70e1e3]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1945523266 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c70e1e3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c70e1e3] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c70e1e3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c70e1e3] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c70e1e3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c70e1e3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c70e1e3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c70e1e3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58e572cf]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@954225800 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58e572cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58e572cf] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58e572cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58e572cf] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58e572cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58e572cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58e572cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@58e572cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12640931]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1906440865 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12640931]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12640931] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12640931]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12640931] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12640931]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12640931]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12640931]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12640931]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747b322e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1176327708 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747b322e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747b322e] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747b322e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747b322e] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747b322e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747b322e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747b322e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747b322e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a85b0a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@308109191 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a85b0a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a85b0a] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a85b0a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a85b0a] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a85b0a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a85b0a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a85b0a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@69a85b0a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@433e6924]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@204108923 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@433e6924]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@433e6924] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@433e6924]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@433e6924] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@433e6924]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@433e6924]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@433e6924]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@433e6924]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a21bda]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1914174228 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a21bda]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a21bda] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a21bda]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a21bda] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a21bda]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a21bda]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a21bda]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a21bda]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a14d0ea]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@322522848 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a14d0ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a14d0ea] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a14d0ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a14d0ea] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a14d0ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a14d0ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a14d0ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a14d0ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1dc43d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@818884527 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1dc43d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1dc43d] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1dc43d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1dc43d] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1dc43d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1dc43d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1dc43d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f1dc43d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e0fcf9]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@846930078 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e0fcf9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e0fcf9] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e0fcf9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e0fcf9] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e0fcf9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e0fcf9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e0fcf9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e0fcf9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc5c8f1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1677864639 wrapping com.mysql.cj.jdbc.ConnectionImpl@52a136f8] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc5c8f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc5c8f1] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc5c8f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc5c8f1] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc5c8f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc5c8f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc5c8f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc5c8f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec464ef]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1843905135 wrapping com.mysql.cj.jdbc.ConnectionImpl@76094d35] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec464ef]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec464ef] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec464ef]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec464ef] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec464ef]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec464ef]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec464ef]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ec464ef]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30961699]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@140673808 wrapping com.mysql.cj.jdbc.ConnectionImpl@76094d35] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30961699]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30961699] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30961699]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30961699] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30961699]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30961699]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30961699]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@30961699]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abea48f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@449111973 wrapping com.mysql.cj.jdbc.ConnectionImpl@76094d35] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abea48f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abea48f] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abea48f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abea48f] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abea48f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abea48f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abea48f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@abea48f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@791f0c07]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@87935169 wrapping com.mysql.cj.jdbc.ConnectionImpl@5d0e657b] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@791f0c07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@791f0c07] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@791f0c07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@791f0c07] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@791f0c07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@791f0c07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@791f0c07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@791f0c07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@218ad8d2]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1170098195 wrapping com.mysql.cj.jdbc.ConnectionImpl@5d0e657b] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@218ad8d2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@218ad8d2] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@218ad8d2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@218ad8d2] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@218ad8d2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@218ad8d2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@218ad8d2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@218ad8d2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@738f7448]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1223534000 wrapping com.mysql.cj.jdbc.ConnectionImpl@20275b88] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@738f7448]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@738f7448] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@738f7448]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@738f7448] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@738f7448]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@738f7448]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@738f7448]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@738f7448]
[DEBUG][20-07-22][org.apache.ibatis.logging.LogFactory]Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@168d3360]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1485687821 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==>  Preparing: select shop_manager.ID,shop_manager.name,shop_manager.age, shop_manager.sex, shop_manager.pwd,shop_manager.nick_name, shop_manager.user_image, shop_manager.birthday, shop_manager.phone, shop_manager.login_name,shop_manager.is_delete from shop_manager where shop_manager.ID = ? and shop_manager.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@168d3360]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@168d3360]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@168d3360]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@168d3360]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d4ab3f8]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1739774088 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==>  Preparing: select shop_manager.ID,shop_manager.name,shop_manager.age, shop_manager.sex, shop_manager.pwd,shop_manager.nick_name, shop_manager.user_image, shop_manager.birthday, shop_manager.phone, shop_manager.login_name,shop_manager.is_delete from shop_manager where shop_manager.ID = ? and shop_manager.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d4ab3f8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d4ab3f8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d4ab3f8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d4ab3f8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddd7382]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1430607035 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddd7382]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddd7382] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddd7382]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddd7382] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddd7382]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddd7382]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddd7382]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ddd7382]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398ed177]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@645287779 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.updateManager]==>  Preparing: UPDATE system_manager SET system_manager.`name`=?, system_manager.phone=?, system_manager.nick_name=?, system_manager.role=?, system_manager.birthday=? WHERE system_manager.ID=? 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.updateManager]==> Parameters: 黄道明(String), 20190608001(String), fastman6(String), 1(Integer), 2000-1-4(String), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.updateManager]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398ed177]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398ed177]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398ed177]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@398ed177]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781e9996]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1308044171 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781e9996]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781e9996] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781e9996]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781e9996] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781e9996]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781e9996]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781e9996]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781e9996]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7452c753]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@165697271 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.deleteManager]==>  Preparing: UPDATE system_manager SET is_delete = 1 WHERE ID = ? 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.deleteManager]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.deleteManager]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7452c753]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7452c753]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7452c753]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7452c753]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8543e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@205537102 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8543e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8543e] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8543e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8543e] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8543e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8543e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8543e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b8543e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17cdbbbe]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@490066126 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.addManager]==>  Preparing: INSERT INTO system_manager(system_manager.`name`,system_manager.phone,system_manager.nick_name,system_manager.role,system_manager.birthday) VALUES (?,?,?,?,?) 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.addManager]==> Parameters: 辛毅(String), 2626262(String), xinyi(String), 1(Integer), 2020-7-13(String)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.addManager]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17cdbbbe]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17cdbbbe]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17cdbbbe]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17cdbbbe]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32abc97]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1434363222 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32abc97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32abc97] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32abc97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32abc97] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32abc97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32abc97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32abc97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32abc97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499caa10]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@114479995 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499caa10]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499caa10]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499caa10]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@499caa10]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d029408]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1970700131 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 AND commodity.`name` LIKE CONCAT('%', CONCAT(?, '%')) 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 腾讯(String)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 AND commodity.`name` like CONCAT('%',CONCAT(?,'%')) LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 腾讯(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d029408]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d029408]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d029408]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d029408]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac6a8e2]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1889654787 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder]==>  Preparing: UPDATE orders SET orders.date=?, orders.description=?, orders.`comment`=?, orders.`status`=? WHERE orders.ID=? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder]==> Parameters: 2020-07-18 22:50:56(String), 请发顺丰快递!!!(String), 1(Integer), 3(Integer), 2(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac6a8e2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac6a8e2] from current transaction
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder_Item]==>  Preparing: UPDATE order_item SET order_item.commodity_quantity=?, order_item.commodity_id = ? WHERE order_item.order_id=? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder_Item]==> Parameters: 2(Integer), 13(Integer), 2(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder_Item]<==    Updates: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac6a8e2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac6a8e2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac6a8e2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ac6a8e2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36a8665e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@332371314 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 AND commodity.`name` LIKE CONCAT('%', CONCAT(?, '%')) 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 腾讯(String)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 AND commodity.`name` like CONCAT('%',CONCAT(?,'%')) LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 腾讯(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36a8665e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36a8665e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36a8665e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36a8665e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1addf8c7]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1650410382 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1addf8c7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1addf8c7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1addf8c7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1addf8c7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bbb98b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@384466392 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==>  Preparing: select shop_manager.ID,shop_manager.name,shop_manager.age, shop_manager.sex, shop_manager.pwd,shop_manager.nick_name, shop_manager.user_image, shop_manager.birthday, shop_manager.phone, shop_manager.login_name,shop_manager.is_delete from shop_manager where shop_manager.ID = ? and shop_manager.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopManagerMapper.searchShopManager]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bbb98b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bbb98b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bbb98b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bbb98b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51dd7481]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1762519452 wrapping com.mysql.cj.jdbc.ConnectionImpl@5f08414d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51dd7481]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51dd7481] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51dd7481]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51dd7481] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51dd7481]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51dd7481]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51dd7481]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51dd7481]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75f63651]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1554506068 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.updateManager]==>  Preparing: UPDATE system_manager SET system_manager.`name`=?, system_manager.phone=?, system_manager.nick_name=?, system_manager.role=?, system_manager.birthday=? WHERE system_manager.ID=? 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.updateManager]==> Parameters: 秦欢馨(String), 18940409780(String), 小黄6(String), 1(Integer), 2000-1-6(String), 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.updateManager]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75f63651]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75f63651]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75f63651]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75f63651]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7e9b29]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@962657843 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7e9b29]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7e9b29] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7e9b29]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7e9b29] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7e9b29]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7e9b29]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7e9b29]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b7e9b29]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@225d0dff]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1512426278 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.deleteManager]==>  Preparing: UPDATE system_manager SET is_delete = 1 WHERE ID = ? 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.deleteManager]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.deleteManager]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@225d0dff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@225d0dff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@225d0dff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@225d0dff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ab1be8]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@425916709 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ab1be8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ab1be8] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ab1be8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ab1be8] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ab1be8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ab1be8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ab1be8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ab1be8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6191c0ed]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1152007996 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.addManager]==>  Preparing: INSERT INTO system_manager(system_manager.`name`,system_manager.phone,system_manager.nick_name,system_manager.role,system_manager.birthday) VALUES (?,?,?,?,?) 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.addManager]==> Parameters: 张三(String), 2252626262(String), zhangsan (String), 1(Integer), 2020-7-5(String)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.addManager]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6191c0ed]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6191c0ed]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6191c0ed]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6191c0ed]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5204b90c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1272707050 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5204b90c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5204b90c] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5204b90c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5204b90c] from current transaction
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-22][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5204b90c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5204b90c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5204b90c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5204b90c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d8918b4]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1917745332 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d8918b4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d8918b4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d8918b4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d8918b4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3375214d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2114583992 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 20
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3375214d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3375214d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3375214d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3375214d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eed7b90]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@231958090 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eed7b90]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eed7b90]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eed7b90]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eed7b90]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25041e65]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@158870561 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 LIMIT ?, ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 10(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25041e65]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25041e65]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25041e65]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25041e65]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7260724a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1092732471 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 AND commodity.`name` LIKE CONCAT('%', CONCAT(?, '%')) 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 游戏智能(String)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 AND commodity.`name` like CONCAT('%',CONCAT(?,'%')) LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 游戏智能(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 5
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7260724a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7260724a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7260724a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7260724a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@543ccc82]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1718172225 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 AND orders.`comment` = ? AND orders.`status` = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 2(Integer), 2(String)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 AND orders.`comment`=? AND orders.`status`=? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 2(Integer), 2(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@543ccc82]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@543ccc82]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@543ccc82]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@543ccc82]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88506b0]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2079547132 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88506b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88506b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88506b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88506b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733482]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@751524278 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder]==>  Preparing: UPDATE orders SET orders.date=?, orders.description=?, orders.`comment`=?, orders.`status`=? WHERE orders.ID=? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder]==> Parameters: 2020-07-19 06:50:56(String), 请发顺丰快递!!!(String), 2(Integer), 3(Integer), 2(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733482]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733482] from current transaction
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder_Item]==>  Preparing: UPDATE order_item SET order_item.commodity_quantity=?, order_item.commodity_id = ? WHERE order_item.order_id=? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder_Item]==> Parameters: 2(Integer), 13(Integer), 2(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.updateOrder_Item]<==    Updates: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733482]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733482]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733482]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3733482]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23422714]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@536527233 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23422714]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23422714]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23422714]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23422714]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@428e3767]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@81415141 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@428e3767]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@428e3767]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@428e3767]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@428e3767]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530ddac1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2088217707 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 AND ID = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID_COUNT]==> Parameters: 5(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 AND ID = ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID]==> Parameters: 5(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530ddac1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530ddac1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530ddac1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@530ddac1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@261e164e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@152667875 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.UpdateJiuFenOrder]==>  Preparing: UPDATE jiufen SET handTime=?, status=1, result=? WHERE ID = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.UpdateJiuFenOrder]==> Parameters: 2020-07-22 16:27:03(String), 同意退货退款(String), 5(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.UpdateJiuFenOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@261e164e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@261e164e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@261e164e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@261e164e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e352e07]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1640051327 wrapping com.mysql.cj.jdbc.ConnectionImpl@741c9b86] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 AND ID = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID_COUNT]==> Parameters: 5(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 AND ID = ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID]==> Parameters: 5(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e352e07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e352e07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e352e07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e352e07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a0be5e5]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1681078348 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a0be5e5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a0be5e5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a0be5e5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a0be5e5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a2e6fd7]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@245790356 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a2e6fd7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a2e6fd7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a2e6fd7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a2e6fd7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a3dcd46]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@95633351 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]==>  Preparing: UPDATE commodity SET commodity.name=?, commodity.modify_time=NOW(), commodity.storage=?, commodity.price=?, commodity.introduction=? WHERE commodity.ID=? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]==> Parameters: 华为旗下荣耀手机荣耀9X麒麟810芯片4800万超清双摄全面屏智能手机官网旗舰(String), 500(String), 1199(String), 络模式: 双卡双待单通
CPU型号: 麒麟810
CPU型号: 麒麟810(String), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a3dcd46]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a3dcd46]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a3dcd46]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a3dcd46]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48688186]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2103910100 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]==>  Preparing: UPDATE commodity SET commodity.name=?, commodity.modify_time=NOW(), commodity.storage=?, commodity.price=?, commodity.introduction=? WHERE commodity.ID=? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]==> Parameters: 华为旗下荣耀手机荣耀9X麒麟810芯片4800万超清双摄全面屏智能手机官网旗舰(String), 500(String), 1199(String), 络模式: 双卡双待单通
CPU型号: 麒麟810
CPU型号: 麒麟810(String), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48688186]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48688186]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48688186]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48688186]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3161c260]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1446325360 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3161c260]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3161c260]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3161c260]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3161c260]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4069bf38]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1807059440 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.deleteGood]==>  Preparing: UPDATE commodity SET commodity.is_delete=1 WHERE commodity.ID=? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.deleteGood]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.deleteGood]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4069bf38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4069bf38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4069bf38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4069bf38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b81c71e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@883781009 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %红米%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %红米%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b81c71e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b81c71e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b81c71e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b81c71e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ba82b0]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@189814382 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.addGood]==>  Preparing: INSERT INTO commodity(name,modify_time,price,storage,specification,status,image,introduction) VALUES (?,?,?,?,?,?,?,?) 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.addGood]==> Parameters: 游戏手机(String), 2020-7-22 16:29:11(String), 1500(String), 500(String), 件(String), 1(Integer), http://qdrwvmqsv.bkt.clouddn.com//upload_pic_2020_07_22_16_29_11.jpg(String), 6666(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.addGood]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ba82b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ba82b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ba82b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ba82b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@709f700b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@438486444 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@709f700b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@709f700b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@709f700b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@709f700b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c695be4]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2116240728 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ?, ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %%(String), 80(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 4
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c695be4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c695be4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c695be4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c695be4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ecdd0e5]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1299845073 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCategory]==>  Preparing: SELECT * FROM category WHERE is_delete=0 AND (category.level=0 OR category.level=3 OR category.level=2 OR category.level=1) 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCategory]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCategory]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ecdd0e5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ecdd0e5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ecdd0e5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ecdd0e5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d324c72]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@344145220 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory_COUNT]==>  Preparing: SELECT count(0) FROM category INNER JOIN category_commodity ON category.ID = category_commodity.category_id INNER JOIN commodity ON commodity.ID = category_commodity.commodity_id WHERE category_commodity.is_delete = 0 AND category.level = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory_COUNT]==> Parameters: 17(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM category INNER JOIN category_commodity ON category.ID=category_commodity.category_id INNER JOIN commodity ON commodity.ID=category_commodity.commodity_id WHERE category_commodity.is_delete=0 AND category.level=? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory]==> Parameters: 17(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory]<==      Total: 3
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d324c72]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d324c72]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d324c72]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d324c72]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32c5a6fb]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@938642472 wrapping com.mysql.cj.jdbc.ConnectionImpl@741c9b86] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCategory]==>  Preparing: SELECT * FROM category WHERE is_delete=0 AND (category.level=0 OR category.level=3 OR category.level=2 OR category.level=1) 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCategory]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCategory]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32c5a6fb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32c5a6fb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32c5a6fb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32c5a6fb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a1fc1b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1998400454 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory_COUNT]==>  Preparing: SELECT count(0) FROM category INNER JOIN category_commodity ON category.ID = category_commodity.category_id INNER JOIN commodity ON commodity.ID = category_commodity.commodity_id WHERE category_commodity.is_delete = 0 AND category.level = ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory_COUNT]==> Parameters: 18(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM category INNER JOIN category_commodity ON category.ID=category_commodity.category_id INNER JOIN commodity ON commodity.ID=category_commodity.commodity_id WHERE category_commodity.is_delete=0 AND category.level=? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory]==> Parameters: 18(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCommodityByCategory]<==      Total: 9
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a1fc1b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a1fc1b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a1fc1b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a1fc1b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210b8eaa]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@162188731 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210b8eaa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210b8eaa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210b8eaa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@210b8eaa]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c75f17]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1963525459 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShopStatus1]==>  Preparing: update shop set shop.status = 1 where shop.id in ( ? , ? ) 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShopStatus1]==> Parameters: 1(Integer), 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShopStatus1]<==    Updates: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c75f17]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c75f17]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c75f17]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21c75f17]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bf4cad]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@434692158 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bf4cad]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bf4cad]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bf4cad]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27bf4cad]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67c0eca0]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2130701191 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShopStatus2]==>  Preparing: update shop set shop.status = 2 where shop.id in ( ? ) 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShopStatus2]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShopStatus2]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67c0eca0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67c0eca0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67c0eca0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67c0eca0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c057f83]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@842488075 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c057f83]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c057f83]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c057f83]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c057f83]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cbf56d4]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1299435529 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShop]==>  Preparing: update shop set shop.`name` = ?, shop.kind = ?, shop.status = ?, shop.tag = ?, shop.description = ? where shop.id = ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShop]==> Parameters: 纵横数码(String), 旗舰店(String), 2(Integer), 食品(String), 8年老店，值得信赖，欢迎选购(String), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cbf56d4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cbf56d4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cbf56d4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3cbf56d4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a15ef81]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1073971771 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShop]==>  Preparing: update shop set shop.`name` = ?, shop.kind = ?, shop.status = ?, shop.tag = ?, shop.description = ? where shop.id = ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShop]==> Parameters: 纵横数码(String), 旗舰店(String), 2(Integer), 食品(String), 8年老店，值得信赖，欢迎选购(String), 1(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.updateShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a15ef81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a15ef81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a15ef81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a15ef81]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a5aa1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1941162333 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a5aa1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a5aa1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a5aa1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15a5aa1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21638c26]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1394889432 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21638c26]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21638c26]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21638c26]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21638c26]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f019278]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1532774907 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af25584] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f019278]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f019278]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f019278]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6f019278]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3763e86c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@801823339 wrapping com.mysql.cj.jdbc.ConnectionImpl@2db62190] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 AND shop.id = ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation_COUNT]==> Parameters: 5(String)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop WHERE shop.isDelete = 0 and shop.id = ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation]==> Parameters: 5(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3763e86c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3763e86c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3763e86c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3763e86c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28bbd5f4]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1108285027 wrapping com.mysql.cj.jdbc.ConnectionImpl@657d0ce7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 AND shop.status = ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation_COUNT]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop WHERE shop.isDelete = 0 and shop.status = ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation]==> Parameters: 1(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28bbd5f4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28bbd5f4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28bbd5f4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28bbd5f4]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@640f8fca]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@879935528 wrapping com.mysql.cj.jdbc.ConnectionImpl@529d6a7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 AND shop.establishTime >= ? AND shop.establishTime <= ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation_COUNT]==> Parameters: 2020-06-01 00:00:00(String), 2020-06-30 00:00:00(String)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop WHERE shop.isDelete = 0 and shop.establishTime>=? and shop.establishTime<=? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation]==> Parameters: 2020-06-01 00:00:00(String), 2020-06-30 00:00:00(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.searchShopByInformation]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@640f8fca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@640f8fca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@640f8fca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@640f8fca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8621ba3]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@229198087 wrapping com.mysql.cj.jdbc.ConnectionImpl@529d6a7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8621ba3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8621ba3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8621ba3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8621ba3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d3103b3]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1242225207 wrapping com.mysql.cj.jdbc.ConnectionImpl@529d6a7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]==>  Preparing: insert into shop(id, `name`,establishTime, kind, status, tag , description, isDelete, img) values (?, ?, ?,?, 0,?, ?, 0, 'https://i.loli.net/2020/07/07/nsQIYyDPUWxBdNZ.jpg') 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]==> Parameters: 17(Integer), rise(String), 2020-7-22 16:32:18(String), 普通店(String), 服饰(String), 6666(String)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d3103b3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d3103b3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d3103b3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d3103b3]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae1881e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1235372634 wrapping com.mysql.cj.jdbc.ConnectionImpl@529d6a7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae1881e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae1881e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae1881e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ae1881e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2445fbc0]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@19720964 wrapping com.mysql.cj.jdbc.ConnectionImpl@529d6a7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ?, ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2445fbc0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2445fbc0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2445fbc0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2445fbc0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@161f64b7]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@710704145 wrapping com.mysql.cj.jdbc.ConnectionImpl@529d6a7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@161f64b7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@161f64b7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@161f64b7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@161f64b7]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4704209a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1438277557 wrapping com.mysql.cj.jdbc.ConnectionImpl@529d6a7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivityStatus1]==>  Preparing: update activity set activity.status = 1 where activity.id = ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivityStatus1]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivityStatus1]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4704209a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4704209a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4704209a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4704209a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efea5db]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1371627574 wrapping com.mysql.cj.jdbc.ConnectionImpl@529d6a7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efea5db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efea5db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efea5db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2efea5db]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4726a912]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@551662435 wrapping com.mysql.cj.jdbc.ConnectionImpl@529d6a7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@566259a1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4726a912]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4726a912]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4726a912]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4726a912]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1737465794 wrapping com.mysql.cj.jdbc.ConnectionImpl@305daf75] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 17
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@566259a1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@566259a1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@566259a1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@566259a1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43cbcc44]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@366101147 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]==>  Preparing: insert into activity(id, `name`, description, createTime, beginTime, endTime, type, status, is_delete, img) values (?,?,?,?,?,?,?,1,0, 'https://i.loli.net/2020/07/07/nsQIYyDPUWxBdNZ.jpg') 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]==> Parameters: 17(Integer), 6666(String), 666(String), 2020-7-22 16:38(String), 2020-07-01 00:00:00(String), 2020-07-17 00:00:00(String), 秒杀(String)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43cbcc44]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43cbcc44]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43cbcc44]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43cbcc44]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34412020]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1605581914 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]==>  Preparing: insert into activity_shop(shop_id, activity_id , is_delete) values (?,?,0) 
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]==> Parameters: 1(Integer), 17(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34412020]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34412020]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34412020]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34412020]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4c2008]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@852495370 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4c2008]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4c2008]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4c2008]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d4c2008]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70825d9d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@54971922 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70825d9d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70825d9d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70825d9d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70825d9d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786b11bf]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1501239120 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786b11bf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786b11bf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786b11bf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@786b11bf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fa87707]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1462374487 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fa87707]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fa87707]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fa87707]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fa87707]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28503907]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1939332175 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28503907]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28503907]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28503907]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@28503907]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42fd034a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1044760359 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]==>  Preparing: insert into shop(id, `name`,establishTime, kind, status, tag , description, isDelete, img) values (?, ?, ?,?, 0,?, ?, 0, 'https://i.loli.net/2020/07/07/nsQIYyDPUWxBdNZ.jpg') 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]==> Parameters: 17(Integer), rise(String), 2020-7-22 16:42:16(String), 普通店(String), 服饰(String), 6666(String)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42fd034a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42fd034a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42fd034a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42fd034a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f5feeff]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1697716330 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f5feeff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f5feeff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f5feeff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f5feeff]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aab6267]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1822619155 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aab6267]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aab6267]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aab6267]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3aab6267]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5194f81d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1560766662 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ?, ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5194f81d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5194f81d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5194f81d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5194f81d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655d942e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1748486625 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655d942e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655d942e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655d942e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655d942e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23e76e2e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1175473076 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23e76e2e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23e76e2e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23e76e2e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@23e76e2e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cde37c1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@222578505 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cde37c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cde37c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cde37c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cde37c1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c702d63]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1083382722 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c702d63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c702d63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c702d63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c702d63]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@451fde30]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@373314978 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivity]==>  Preparing: update activity set activity.`name` = ?, activity.beginTime = ? , activity.endTime = ?, activity.status = ?, activity.type = ?, activity.description = ? where activity.id = ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivity]==> Parameters: 双十一秒杀(String), 2020-06-09 23:00:00(String), 2020-06-24 23:00:00(String), 0(Integer), 团购(String), 超值活动限时秒杀哦，机不可失失不再来(String), 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@451fde30]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@451fde30]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@451fde30]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@451fde30]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67367943]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1375505547 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67367943]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67367943]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67367943]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67367943]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@430d19da]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1849300431 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@430d19da]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@430d19da]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@430d19da]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@430d19da]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219c5a2f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@720614626 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219c5a2f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219c5a2f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219c5a2f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219c5a2f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246df56b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1669916836 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ?, ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246df56b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246df56b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246df56b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@246df56b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5afa48f1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1254072408 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5afa48f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5afa48f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5afa48f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5afa48f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6eda086]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1541691579 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivity]==>  Preparing: update activity set activity.`name` = ?, activity.beginTime = ? , activity.endTime = ?, activity.status = ?, activity.type = ?, activity.description = ? where activity.id = ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivity]==> Parameters: 双十一秒杀111(String), 2020-06-11 07:00:00(String), 2020-06-30 07:00:00(String), 0(Integer), 团购(String), 超值活动限时秒杀哦，机不可失失不再来(String), 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6eda086]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6eda086]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6eda086]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6eda086]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b28c201]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2021433960 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b28c201]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b28c201]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b28c201]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b28c201]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78853cb1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@467983020 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivityStatus1]==>  Preparing: update activity set activity.status = 1 where activity.id = ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivityStatus1]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivityStatus1]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78853cb1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78853cb1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78853cb1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78853cb1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f680206]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2035443399 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f680206]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f680206]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f680206]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f680206]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbf0979]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1125111093 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 AND activity.id = ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]==> Parameters: 5(String)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 and activity_shop.is_delete = 0 and activity.id = ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]==> Parameters: 5(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbf0979]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbf0979]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbf0979]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbf0979]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eb2dff2]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1410186415 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 AND activity.status = ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]==> Parameters: 1(String)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 and activity_shop.is_delete = 0 and activity.status = ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]==> Parameters: 1(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]<==      Total: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eb2dff2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eb2dff2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eb2dff2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eb2dff2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d27888b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1900571766 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 AND activity.beginTime >= ? AND activity.endTime <= ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]==> Parameters: 2020-06-01 00:00:00(String), 2020-08-31 00:00:00(String)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 and activity_shop.is_delete = 0 and activity.beginTime >=? and activity.endTime <=? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]==> Parameters: 2020-06-01 00:00:00(String), 2020-08-31 00:00:00(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d27888b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d27888b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d27888b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3d27888b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc8060]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2101541494 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc8060]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc8060]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc8060]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fc8060]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45352b53]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1212125385 wrapping com.mysql.cj.jdbc.ConnectionImpl@11399c2f] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 17
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45352b53]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45352b53]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45352b53]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45352b53]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e99c56]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@383360146 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]==>  Preparing: insert into activity(id, `name`, description, createTime, beginTime, endTime, type, status, is_delete, img) values (?,?,?,?,?,?,?,1,0, 'https://i.loli.net/2020/07/07/nsQIYyDPUWxBdNZ.jpg') 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]==> Parameters: 17(Integer), wuyimiao(String), 66(String), 2020-7-22 16:46(String), 2020-07-14 00:00:00(String), 2020-07-29 00:00:00(String), 秒杀(String)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e99c56]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e99c56]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e99c56]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26e99c56]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d674fc6]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1410296647 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]==>  Preparing: insert into activity_shop(shop_id, activity_id , is_delete) values (?,?,0) 
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]==> Parameters: 1(Integer), 17(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d674fc6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d674fc6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d674fc6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d674fc6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1054f966]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1111701965 wrapping com.mysql.cj.jdbc.ConnectionImpl@4813215c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1054f966]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1054f966]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1054f966]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1054f966]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@418fce39]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@196356529 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@418fce39]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@418fce39]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@418fce39]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@418fce39]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@311380a1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@17398581 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@311380a1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@311380a1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@311380a1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@311380a1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@242a84a5]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1990044520 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ?, ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@242a84a5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@242a84a5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@242a84a5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@242a84a5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52b0ad5a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@415769325 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52b0ad5a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52b0ad5a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52b0ad5a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52b0ad5a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eb16c3b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1721642083 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivity]==>  Preparing: update activity set activity.`name` = ?, activity.beginTime = ? , activity.endTime = ?, activity.status = ?, activity.type = ?, activity.description = ? where activity.id = ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivity]==> Parameters: 双十一秒杀122(String), 2020-06-01 15:00:00(String), 2020-06-29 15:00:00(String), 1(Integer), 团购(String), 超值活动限时秒杀哦，机不可失失不再来(String), 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eb16c3b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eb16c3b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eb16c3b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7eb16c3b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@132c187b]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@271567846 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@132c187b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@132c187b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@132c187b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@132c187b]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b1d1c68]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1392089403 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivityStatus0]==>  Preparing: update activity set activity.status = 0 where activity.id = ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivityStatus0]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.updateActivityStatus0]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b1d1c68]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b1d1c68]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b1d1c68]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b1d1c68]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72937b97]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@878956913 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72937b97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72937b97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72937b97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72937b97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16636f6a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@811505999 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 AND activity.id = ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]==> Parameters: 5(String)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 and activity_shop.is_delete = 0 and activity.id = ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]==> Parameters: 5(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16636f6a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16636f6a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16636f6a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16636f6a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fdd7768]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@881101953 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 AND activity.beginTime >= ? AND activity.endTime <= ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]==> Parameters: 2020-06-02 00:00:00(String), 2020-06-30 00:00:00(String)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 and activity_shop.is_delete = 0 and activity.beginTime >=? and activity.endTime <=? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]==> Parameters: 2020-06-02 00:00:00(String), 2020-06-30 00:00:00(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.searchActivityByInformation]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fdd7768]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fdd7768]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fdd7768]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4fdd7768]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71881ff6]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@512518930 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71881ff6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71881ff6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71881ff6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15770497]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@71881ff6]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@738130490 wrapping com.mysql.cj.jdbc.ConnectionImpl@30238c9a] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 17
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15770497]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15770497]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15770497]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15770497]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d66f80a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1912997702 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]==>  Preparing: insert into activity(id, `name`, description, createTime, beginTime, endTime, type, status, is_delete, img) values (?,?,?,?,?,?,?,1,0, 'https://i.loli.net/2020/07/07/nsQIYyDPUWxBdNZ.jpg') 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]==> Parameters: 18(Integer), 五一秒杀(String), 6666(String), 2020-7-22 16:48(String), 2020-07-01 00:00:00(String), 2020-07-29 00:00:00(String), 秒杀(String)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d66f80a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d66f80a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d66f80a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d66f80a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e391998]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@575367298 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]==>  Preparing: insert into activity_shop(shop_id, activity_id , is_delete) values (?,?,0) 
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]==> Parameters: 1(Integer), 18(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e391998]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e391998]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e391998]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e391998]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d51275]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1983923507 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d51275]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d51275]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d51275]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d51275]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@161ab362]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1775411651 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@161ab362]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@161ab362]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@161ab362]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@161ab362]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78328d25]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1555392233 wrapping com.mysql.cj.jdbc.ConnectionImpl@572b7926] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao WHERE name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: %全新Apple/苹果%(String)
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao WHERE name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: %全新Apple/苹果%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78328d25]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78328d25]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78328d25]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78328d25]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b9f64cf]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1132976366 wrapping com.mysql.cj.jdbc.ConnectionImpl@44f77a1e] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b9f64cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b9f64cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b9f64cf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b9f64cf]
[DEBUG][20-07-22][org.apache.ibatis.logging.LogFactory]Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d9b25c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@676805589 wrapping com.mysql.cj.jdbc.ConnectionImpl@51aa1c32] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d9b25c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d9b25c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d9b25c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39d9b25c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f08bb5]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1913184453 wrapping com.mysql.cj.jdbc.ConnectionImpl@51aa1c32] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f08bb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f08bb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f08bb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f08bb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7adbfe14]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1881380196 wrapping com.mysql.cj.jdbc.ConnectionImpl@51aa1c32] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7adbfe14]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7adbfe14]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7adbfe14]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7adbfe14]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77fbc5b1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2097393345 wrapping com.mysql.cj.jdbc.ConnectionImpl@51aa1c32] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77fbc5b1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77fbc5b1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77fbc5b1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77fbc5b1]
[DEBUG][20-07-22][org.apache.ibatis.logging.LogFactory]Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@199bedab]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@151743153 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cad0726] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@199bedab]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@199bedab]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@199bedab]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@199bedab]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12740ee2]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1702757134 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cad0726] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]==>  Preparing: insert into shop(id, `name`,establishTime, kind, status, tag , description, isDelete, img) values (?, ?, ?,?, 0,?, ?, 0, ?) 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]==> Parameters: 17(Integer), 11(String), 2020-7-22 17:51:53(String), 普通店(String), 服饰(String), 11(String), http://qdrwvmqsv.bkt.clouddn.com//upload_pic_2020_07_22_17_51_53.JPG(String)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12740ee2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12740ee2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12740ee2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12740ee2]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4616bdbd]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@80197048 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cad0726] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4616bdbd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4616bdbd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4616bdbd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4616bdbd]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3779dc66]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1031911190 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cad0726] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ?, ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3779dc66]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3779dc66]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3779dc66]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3779dc66]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7717bb07]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2112868471 wrapping com.mysql.cj.jdbc.ConnectionImpl@38ed41ae] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29529e17]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@598406503 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cad0726] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29529e17]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29529e17]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29529e17]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29529e17]
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 17
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7717bb07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7717bb07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7717bb07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7717bb07]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c545e52]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@898555700 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cad0726] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c545e52]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c545e52]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c545e52]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c545e52]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63a9aa6a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1766965530 wrapping com.mysql.cj.jdbc.ConnectionImpl@2c534254] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCategory]==>  Preparing: SELECT * FROM category WHERE is_delete=0 AND (category.level=0 OR category.level=3 OR category.level=2 OR category.level=1) 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCategory]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllCategory]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63a9aa6a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63a9aa6a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63a9aa6a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63a9aa6a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60db8fb5]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@63460244 wrapping com.mysql.cj.jdbc.ConnectionImpl@2c534254] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60db8fb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60db8fb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60db8fb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60db8fb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb7f792]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@603031790 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb7f792]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb7f792]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb7f792]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb7f792]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2a444d]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@819081021 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2a444d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2a444d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2a444d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a2a444d]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19badda6]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@32381011 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19badda6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19badda6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19badda6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19badda6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c429caf]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@410577212 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c429caf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c429caf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c429caf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c429caf]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45947df0]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1769766056 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45947df0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45947df0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45947df0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45947df0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6399487e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1722353621 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]==>  Preparing: insert into shop(id, `name`,establishTime, kind, status, tag , description, isDelete, img) values (?, ?, ?,?, 0,?, ?, 0, ?) 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]==> Parameters: 18(Integer), 111(String), 2020-7-22 18:11:19(String), 普通店(String), 服饰(String), 11(String), http://qdrwvmqsv.bkt.clouddn.com//upload_pic_2020_07_22_18_11_18.jpg(String)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.insertShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6399487e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6399487e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6399487e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6399487e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f5a360]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@669281862 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f5a360]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f5a360]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f5a360]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38f5a360]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70af6a71]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1163119926 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ?, ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 8
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70af6a71]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70af6a71]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70af6a71]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70af6a71]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e89f8ca]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1148294074 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.deleteShop]==>  Preparing: update shop set shop.isDelete = 1 where shop.id = ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.deleteShop]==> Parameters: 17(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.deleteShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e89f8ca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e89f8ca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e89f8ca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e89f8ca]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea2065a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@760241190 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.deleteShop]==>  Preparing: update shop set shop.isDelete = 1 where shop.id = ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.deleteShop]==> Parameters: 18(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.deleteShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea2065a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea2065a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea2065a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea2065a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e25d70f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@888104048 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79f59ce9]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1083066838 wrapping com.mysql.cj.jdbc.ConnectionImpl@3806db01] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 16
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79f59ce9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79f59ce9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79f59ce9]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79f59ce9]
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e25d70f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e25d70f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e25d70f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e25d70f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e88dc97]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@936118059 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e88dc97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e88dc97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e88dc97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e88dc97]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39289913]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2001828294 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15d16a54]
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39289913]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39289913]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39289913]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39289913]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1076946097 wrapping com.mysql.cj.jdbc.ConnectionImpl@3806db01] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 16
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15d16a54]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15d16a54]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15d16a54]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15d16a54]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5350d73e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@71531147 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db08d98]
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5350d73e]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1709539676 wrapping com.mysql.cj.jdbc.ConnectionImpl@3806db01] will be managed by Spring
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5350d73e]
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5350d73e]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5350d73e]
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 16
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db08d98]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db08d98]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db08d98]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1db08d98]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df21c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2015111625 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6be298cc]
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df21c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df21c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df21c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3df21c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1725629400 wrapping com.mysql.cj.jdbc.ConnectionImpl@3806db01] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 16
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6be298cc]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6be298cc]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6be298cc]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6be298cc]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d1e7c38]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2045648842 wrapping com.mysql.cj.jdbc.ConnectionImpl@3806db01] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@157e1512]
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@930814675 wrapping com.mysql.cj.jdbc.ConnectionImpl@6879039] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 16
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@157e1512]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@157e1512]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@157e1512]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@157e1512]
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d1e7c38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d1e7c38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d1e7c38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d1e7c38]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4407c9f8]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@403370972 wrapping com.mysql.cj.jdbc.ConnectionImpl@60aff744] will be managed by Spring
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b788548]
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1069190747 wrapping com.mysql.cj.jdbc.ConnectionImpl@4a31aeaa] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4407c9f8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4407c9f8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4407c9f8]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4407c9f8]
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 16
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b788548]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b788548]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b788548]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6b788548]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fe72e27]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@199506651 wrapping com.mysql.cj.jdbc.ConnectionImpl@4a31aeaa] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e9e493a]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1662543236 wrapping com.mysql.cj.jdbc.ConnectionImpl@6512e7fa] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fe72e27]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fe72e27]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fe72e27]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7fe72e27]
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 16
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e9e493a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e9e493a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e9e493a]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e9e493a]
[DEBUG][20-07-22][org.apache.ibatis.logging.LogFactory]Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8e33701]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48f96b2f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@322087897 wrapping com.mysql.cj.jdbc.ConnectionImpl@645e3207] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1301136695 wrapping com.mysql.cj.jdbc.ConnectionImpl@4db4291a] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48f96b2f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48f96b2f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48f96b2f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48f96b2f]
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-22][lexian.mapper.ShopMapper.getAllShop]<==      Total: 16
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8e33701]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8e33701]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8e33701]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8e33701]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35279d20]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61d70714]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1798270052 wrapping com.mysql.cj.jdbc.ConnectionImpl@4db4291a] will be managed by Spring
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1300762246 wrapping com.mysql.cj.jdbc.ConnectionImpl@645e3207] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]==>  Preparing: insert into activity(id, `name`, description, createTime, beginTime, endTime, type, status, is_delete, img) values (?,?,?,?,?,?,?,1,0, ?) 
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]==>  Preparing: insert into activity_shop(shop_id, activity_id , is_delete) values (?,?,0) 
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]==> Parameters: 1(Integer), 17(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]==> Parameters: 17(Integer), 11(String), 11(String), 2020-7-22 18:17(String), 2020-07-02 00:00:00(String), 2020-07-09 00:00:00(String), 团购(String), http://qdrwvmqsv.bkt.clouddn.com//upload_pic_2020_07_22_18_17_13.jpg(String)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.insertActivity]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61d70714]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61d70714]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61d70714]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61d70714]
[DEBUG][20-07-22][lexian.mapper.ActivityShopMapper.insertActivityShop]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35279d20]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35279d20]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35279d20]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35279d20]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@673a7750]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1694252207 wrapping com.mysql.cj.jdbc.ConnectionImpl@4db4291a] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 7
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@673a7750]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@673a7750]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@673a7750]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@673a7750]
[DEBUG][20-07-22][org.apache.ibatis.logging.LogFactory]Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f8ad4ea]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@549506507 wrapping com.mysql.cj.jdbc.ConnectionImpl@1453829] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f8ad4ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f8ad4ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f8ad4ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f8ad4ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36472d4f]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1019168319 wrapping com.mysql.cj.jdbc.ConnectionImpl@1453829] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %华为旗下%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %华为旗下%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36472d4f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36472d4f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36472d4f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36472d4f]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27fd4429]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@755314521 wrapping com.mysql.cj.jdbc.ConnectionImpl@1453829] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27fd4429]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27fd4429]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27fd4429]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27fd4429]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f08bb5]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1913184453 wrapping com.mysql.cj.jdbc.ConnectionImpl@1453829] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f08bb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f08bb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f08bb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78f08bb5]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c82a26]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1523546464 wrapping com.mysql.cj.jdbc.ConnectionImpl@1453829] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.deleteGood]==>  Preparing: UPDATE commodity SET commodity.is_delete=1 WHERE commodity.ID=? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.deleteGood]==> Parameters: 1(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.deleteGood]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c82a26]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c82a26]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c82a26]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c82a26]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c2f1bb]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@22944552 wrapping com.mysql.cj.jdbc.ConnectionImpl@1453829] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.deleteGood]==>  Preparing: UPDATE commodity SET commodity.is_delete=1 WHERE commodity.ID=? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.deleteGood]==> Parameters: 2(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.deleteGood]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c2f1bb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c2f1bb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c2f1bb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15c2f1bb]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0774a6]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1727995862 wrapping com.mysql.cj.jdbc.ConnectionImpl@23fd8d6d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]==>  Preparing: UPDATE commodity SET commodity.name=?, commodity.modify_time=NOW(), commodity.storage=?, commodity.price=?, commodity.introduction=? WHERE commodity.ID=? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]==> Parameters: vjvj X21S正品学生价水滴全面屏安卓指纹游戏电信全网通智能手机(String), 100(Integer), 748.58(Double), 网络类型	4G+全网通
网络模式	双卡双待
CPU信息CPU信息
CPU品牌	联发科
CPU型号	MTK6763
CPU核心数	八核(String), 3(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0774a6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0774a6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0774a6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6c0774a6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1214ac10]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1137865250 wrapping com.mysql.cj.jdbc.ConnectionImpl@23fd8d6d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]==>  Preparing: UPDATE commodity SET commodity.name=?, commodity.modify_time=NOW(), commodity.storage=?, commodity.price=?, commodity.introduction=? WHERE commodity.ID=? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]==> Parameters: vjvj X21S正品学生价水滴全面屏安卓指纹游戏电信全网通智能手机(String), 100(Integer), 748.58(Double), 网络类型	4G+全网通
网络模式	双卡双待
CPU信息CPU信息
CPU品牌	联发科
CPU型号	MTK6763
CPU核心数	八核(String), 3(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.updateGood]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1214ac10]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1214ac10]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1214ac10]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1214ac10]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d570e30]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@556692957 wrapping com.mysql.cj.jdbc.ConnectionImpl@23fd8d6d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %%(String)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d570e30]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d570e30]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d570e30]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d570e30]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2473b421]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1492819955 wrapping com.mysql.cj.jdbc.ConnectionImpl@23fd8d6d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2473b421]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2473b421]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2473b421]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2473b421]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711924f1]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@313268156 wrapping com.mysql.cj.jdbc.ConnectionImpl@23fd8d6d] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 AND ID = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID_COUNT]==> Parameters: 5(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 AND ID = ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID]==> Parameters: 5(Integer), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrderByID]<==      Total: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711924f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711924f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711924f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@711924f1]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a161147]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@23336093 wrapping com.mysql.cj.jdbc.ConnectionImpl@1deedee1] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a161147]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a161147]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a161147]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a161147]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7adbfe14]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1881380196 wrapping com.mysql.cj.jdbc.ConnectionImpl@1deedee1] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.DeleteJiuFenOrder]==>  Preparing: UPDATE jiufen SET is_delete=1 WHERE ID=? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.DeleteJiuFenOrder]==> Parameters: 7(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.DeleteJiuFenOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7adbfe14]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7adbfe14]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7adbfe14]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7adbfe14]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db44893]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2001478627 wrapping com.mysql.cj.jdbc.ConnectionImpl@1deedee1] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.UpdateJiuFenOrder]==>  Preparing: UPDATE jiufen SET handTime=?, status=1, result=? WHERE ID = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.UpdateJiuFenOrder]==> Parameters: 2020-07-22 23:04:49(String), 同意退货退款(String), 1(Integer)
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27a0f4c6]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@734899552 wrapping com.mysql.cj.jdbc.ConnectionImpl@66828a8c] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.UpdateJiuFenOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db44893]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db44893]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db44893]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7db44893]
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27a0f4c6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27a0f4c6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27a0f4c6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27a0f4c6]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170f6ee0]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@553361199 wrapping com.mysql.cj.jdbc.ConnectionImpl@1deedee1] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170f6ee0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170f6ee0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170f6ee0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170f6ee0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@284ffeae]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@589618463 wrapping com.mysql.cj.jdbc.ConnectionImpl@1deedee1] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.UpdateJiuFenOrder]==>  Preparing: UPDATE jiufen SET handTime=?, status=1, result=? WHERE ID = ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.UpdateJiuFenOrder]==> Parameters: 2020-07-22 23:04:59(String), 驳回买家请求(String), 2(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.UpdateJiuFenOrder]<==    Updates: 1
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@284ffeae]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@284ffeae]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@284ffeae]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@284ffeae]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10af66ea]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1757072253 wrapping com.mysql.cj.jdbc.ConnectionImpl@1deedee1] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10af66ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10af66ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10af66ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10af66ea]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21108d2c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@639232898 wrapping com.mysql.cj.jdbc.ConnectionImpl@61a0e1d4] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21108d2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21108d2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21108d2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21108d2c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@336b08c]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1382112289 wrapping com.mysql.cj.jdbc.ConnectionImpl@61a0e1d4] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao WHERE name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: %全新Apple/苹果%(String)
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao WHERE name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: %全新Apple/苹果%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@336b08c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@336b08c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@336b08c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@336b08c]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3560cc87]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@188668214 wrapping com.mysql.cj.jdbc.ConnectionImpl@61a0e1d4] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3560cc87]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3560cc87]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3560cc87]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3560cc87]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5abe73b0]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1788213171 wrapping com.mysql.cj.jdbc.ConnectionImpl@61a0e1d4] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao WHERE name LIKE ? 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: %全新Apple/苹果%(String)
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao WHERE name LIKE ? LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: %全新Apple/苹果%(String), 10(Integer)
[DEBUG][20-07-22][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 2
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5abe73b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5abe73b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5abe73b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5abe73b0]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dec0e18]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1402378330 wrapping com.mysql.cj.jdbc.ConnectionImpl@39740ed7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dec0e18]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dec0e18]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dec0e18]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4dec0e18]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb86578]
[DEBUG][20-07-22][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1178603016 wrapping com.mysql.cj.jdbc.ConnectionImpl@39740ed7] will be managed by Spring
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==> Parameters: 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]<==      Total: 1
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 LIMIT ? 
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-22][lexian.mapper.OrderMapper.getJiuFenOrder]<==      Total: 10
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb86578]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb86578]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb86578]
[DEBUG][20-07-22][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4cb86578]
>>>>>>> cc7ba8ec7d0fd7c75c5420ff508dfe0f14fda51b
[DEBUG][20-07-23][org.apache.ibatis.logging.LogFactory]Logging initialized using 'class org.apache.ibatis.logging.log4j.Log4jImpl' adapter.
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32ef3add]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@99992190 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@299edc57]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2091254933 wrapping com.mysql.cj.jdbc.ConnectionImpl@4bc381f5] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity where activity.is_delete = 0 AND activity.id > 10 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@299edc57]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@299edc57]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@299edc57]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@299edc57]
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]<==      Total: 84
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32ef3add]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32ef3add]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32ef3add]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32ef3add]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f3fe47]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@820529440 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN activity_commodity ON commodity.ID = activity_commodity.commodity_id WHERE commodity.is_delete=0 AND activity_commodity.is_delete=0 AND activity_commodity.activity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==> Parameters: 15(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f3fe47]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f3fe47]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f3fe47]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29f3fe47]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a9fd73c]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@812104780 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN activity_commodity ON commodity.ID = activity_commodity.commodity_id WHERE commodity.is_delete=0 AND activity_commodity.is_delete=0 AND activity_commodity.activity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a9fd73c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a9fd73c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a9fd73c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3a9fd73c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@341dfd9a]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@430096670 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 15(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@341dfd9a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@341dfd9a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@341dfd9a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@341dfd9a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@636c3930]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@33717475 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 15(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@636c3930]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@636c3930]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@636c3930]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@636c3930]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b3efb]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@203185620 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 15(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b3efb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b3efb] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b3efb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b3efb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b3efb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46b3efb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7515f5d5] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@710277084 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7515f5d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5990117c]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@401308571 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 15(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5990117c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5990117c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5990117c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5990117c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e8ea33]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@636682028 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 15(Integer), 1(Integer), 2020-07-23 20:08:26.022(Timestamp), 0(Integer), 2020-07-23 20:08:26.022(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e8ea33]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e8ea33]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e8ea33]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42e8ea33]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@664f9d4]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@211587748 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN activity_commodity ON commodity.ID = activity_commodity.commodity_id WHERE commodity.is_delete=0 AND activity_commodity.is_delete=0 AND activity_commodity.activity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@664f9d4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@664f9d4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@664f9d4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@664f9d4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f8487a1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1434250449 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f8487a1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f8487a1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f8487a1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f8487a1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bbc5c3b]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@327979926 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bbc5c3b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bbc5c3b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bbc5c3b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6bbc5c3b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@741f9ba5]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@657812027 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@741f9ba5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@741f9ba5] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@741f9ba5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@741f9ba5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@741f9ba5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@741f9ba5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70ee48db] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@341786449 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70ee48db]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3754141c]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@546229898 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 11(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3754141c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3754141c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3754141c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3754141c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d313f4]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@257636060 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 11(Integer), 1(Integer), 2020-07-23 20:08:29.096(Timestamp), 0(Integer), 2020-07-23 20:08:29.096(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d313f4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d313f4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d313f4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d313f4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3165fed5]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@699898355 wrapping com.mysql.cj.jdbc.ConnectionImpl@4bc381f5] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN activity_commodity ON commodity.ID = activity_commodity.commodity_id WHERE commodity.is_delete=0 AND activity_commodity.is_delete=0 AND activity_commodity.activity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==> Parameters: 12(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3165fed5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3165fed5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3165fed5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3165fed5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34cea308]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1274631059 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34cea308]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34cea308]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34cea308]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34cea308]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76573c85]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1609886080 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76573c85]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76573c85] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76573c85]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76573c85]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76573c85]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76573c85]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@295bfdbd] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@930317591 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@295bfdbd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6bae7c]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1381725494 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 11(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6bae7c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6bae7c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6bae7c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f6bae7c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5be6686a]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1945552217 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 11(Integer), 1(Integer), 2020-07-23 20:08:32.992(Timestamp), 0(Integer), 2020-07-23 20:08:32.992(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5be6686a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5be6686a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5be6686a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5be6686a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e9ae5d]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1796326701 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN activity_commodity ON commodity.ID = activity_commodity.commodity_id WHERE commodity.is_delete=0 AND activity_commodity.is_delete=0 AND activity_commodity.activity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e9ae5d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e9ae5d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e9ae5d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e9ae5d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@778e4d1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1336649513 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 12(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@778e4d1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@778e4d1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@778e4d1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@778e4d1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@572e2838]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1232405511 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 12(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@572e2838]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@572e2838]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@572e2838]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@572e2838]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38ca2b9f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1266943194 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 12(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38ca2b9f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38ca2b9f] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38ca2b9f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38ca2b9f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38ca2b9f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38ca2b9f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d7041a5] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@417394597 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d7041a5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42d3d0c0]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1378062224 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 12(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42d3d0c0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42d3d0c0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42d3d0c0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@42d3d0c0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@275588cd]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@709132056 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 12(Integer), 1(Integer), 2020-07-23 20:08:35.441(Timestamp), 0(Integer), 2020-07-23 20:08:35.441(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@275588cd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@275588cd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@275588cd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@275588cd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73be5bb9]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@896435638 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN activity_commodity ON commodity.ID = activity_commodity.commodity_id WHERE commodity.is_delete=0 AND activity_commodity.is_delete=0 AND activity_commodity.activity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==> Parameters: 12(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73be5bb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73be5bb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73be5bb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@73be5bb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31872b83]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1238532721 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31872b83]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31872b83]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31872b83]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31872b83]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d993172]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1389799978 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d993172]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d993172] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d993172]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d993172]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d993172]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d993172]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d174db] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2117147185 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19d174db]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f19fc6f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2078955511 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 11(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f19fc6f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f19fc6f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f19fc6f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f19fc6f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0c0737]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@264701886 wrapping com.mysql.cj.jdbc.ConnectionImpl@16a40055] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 11(Integer), 1(Integer), 2020-07-23 20:08:37.954(Timestamp), 0(Integer), 2020-07-23 20:08:37.954(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0c0737]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0c0737]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0c0737]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4a0c0737]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6624ab1b]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1035779228 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6624ab1b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6624ab1b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6624ab1b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6624ab1b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7384d526]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@594166146 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7384d526]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7384d526]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7384d526]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7384d526]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d52481]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@992825329 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d52481]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d52481]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d52481]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31d52481]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a49ef2]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2057964052 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a49ef2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a49ef2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a49ef2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2a49ef2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3247553b]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@322516948 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3247553b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3247553b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3247553b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3247553b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1349f215]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1051167785 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1349f215]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1349f215]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1349f215]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1349f215]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c03403f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1086690135 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c03403f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c03403f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c03403f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c03403f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2497c53f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@748430069 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2497c53f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2497c53f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2497c53f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2497c53f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6815e7ed]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@276599253 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6815e7ed]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6815e7ed]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6815e7ed]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6815e7ed]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eb66222]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@72605874 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eb66222]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eb66222]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eb66222]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eb66222]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eec50b6]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@816321607 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eec50b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eec50b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eec50b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2eec50b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c6228d1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1954918877 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c6228d1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c6228d1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c6228d1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c6228d1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b6053db]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@427413289 wrapping com.mysql.cj.jdbc.ConnectionImpl@306d540c] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b6053db]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b6053db]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b6053db]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b6053db]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3687dd4a]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1913789453 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN activity_commodity ON commodity.ID = activity_commodity.commodity_id WHERE commodity.is_delete=0 AND activity_commodity.is_delete=0 AND activity_commodity.activity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3687dd4a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3687dd4a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3687dd4a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3687dd4a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f9b6eb9]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@179281554 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 12(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f9b6eb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f9b6eb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f9b6eb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f9b6eb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eac4145]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@58550513 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 12(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eac4145]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eac4145] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eac4145]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eac4145]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eac4145]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4eac4145]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e133fd] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1496580048 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e133fd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ae0f90]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1891790728 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 12(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ae0f90]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ae0f90]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ae0f90]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65ae0f90]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9424fdf]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1331410680 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 12(Integer), 1(Integer), 2020-07-23 20:36:37.578(Timestamp), 0(Integer), 2020-07-23 20:36:37.578(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9424fdf]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9424fdf]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9424fdf]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9424fdf]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4857af0c]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1137919395 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4857af0c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4857af0c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4857af0c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4857af0c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c21c340]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@159905645 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? order by oi.sales desc LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c21c340]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c21c340]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c21c340]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c21c340]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105bb680]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@942022102 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? order by g.price LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105bb680]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105bb680]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105bb680]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105bb680]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51faf6e0]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@289254143 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? order by g.price desc LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51faf6e0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51faf6e0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51faf6e0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51faf6e0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a35bc54]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2092206104 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a35bc54]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a35bc54]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a35bc54]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a35bc54]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de14dd]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@792443818 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de14dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de14dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de14dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de14dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3599e4af]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1228948193 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3599e4af]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3599e4af]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3599e4af]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3599e4af]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4a5838]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@690438076 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4a5838]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4a5838] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4a5838]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4a5838]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4a5838]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a4a5838]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b3951f6] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1534283250 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4b3951f6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5d04ad]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1261933219 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5d04ad]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5d04ad]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5d04ad]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b5d04ad]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c51137a]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1931482700 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 1(Integer), 1(Integer), 2020-07-23 20:37:20.258(Timestamp), 0(Integer), 2020-07-23 20:37:20.258(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c51137a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c51137a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c51137a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c51137a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea5254b]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1889273452 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea5254b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea5254b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea5254b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ea5254b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56bf2fc8]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@769077699 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56bf2fc8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56bf2fc8] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56bf2fc8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56bf2fc8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56bf2fc8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56bf2fc8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f32760] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@490620596 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f32760]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47768507]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@854323363 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47768507]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47768507]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47768507]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47768507]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655924d0]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1691615454 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 1(Integer), 1(Integer), 2020-07-23 20:37:32.083(Timestamp), 0(Integer), 2020-07-23 20:37:32.083(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655924d0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655924d0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655924d0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655924d0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a09096]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@95631721 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a09096]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a09096]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a09096]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14a09096]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56309ba9] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@183137354 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56309ba9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7456bbee]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2138629037 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7456bbee]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7456bbee]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7456bbee]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7456bbee]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9595ad5]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1747501587 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9595ad5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9595ad5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9595ad5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9595ad5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@277277757 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrder]==>  Preparing: INSERT INTO orders(date,description,comment,status) VALUES (?,?,?,?) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrder]==> Parameters: 2020-07-23 20:38:08.823(Timestamp), null, 0(Integer), 0(Integer)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrder]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertShopOrder]==>  Preparing: INSERT INTO shop_order(shop_id,order_id) values ( ?,? ) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertShopOrder]==> Parameters: 1(String), 35(Integer)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertShopOrder]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderItem]==>  Preparing: insert into order_item(order_id,commodity_id,commodity_quantity,status) values ( ?,?,?,1 ) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderItem]==> Parameters: 35(Integer), 1(String), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderItem]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertCustomeOrder]==>  Preparing: insert into customer_order(order_id,customer_id) values(?,?) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertCustomeOrder]==> Parameters: 35(Integer), 1(String)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertCustomeOrder]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderAddress]==>  Preparing: insert into order_address(order_id,address_id) values(?,?) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderAddress]==> Parameters: 35(Integer), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderAddress]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@737cc641]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60d27207]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@169991553 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.updateOrderState]==>  Preparing: UPDATE orders, order_item SET order_item.status = ? WHERE orders.ID = ? AND order_item.order_id = orders.ID AND order_item.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.updateOrderState]==> Parameters: 1(Integer), 35(String), null
[DEBUG][20-07-23][lexian.mapper.OrderMapper.updateOrderState]<==    Updates: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60d27207]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60d27207]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60d27207]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60d27207]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@710fde42] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@698575923 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CustomerMapper.selectById]==>  Preparing: SELECT c.*,w.money_amount as moneyAmount,w.wallet_pwd as walletPwd,w.id as walletId FROM `customer` c left JOIN wallet w on c.ID = w.customer_id where c.ID = ? 
[DEBUG][20-07-23][lexian.mapper.CustomerMapper.selectById]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CustomerMapper.selectById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@710fde42]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45bb3eff]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@755019b4]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1728016211 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@693656766 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@755019b4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@755019b4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@755019b4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@755019b4]
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45bb3eff]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45bb3eff]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45bb3eff]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45bb3eff]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b54360e]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1071386613 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.deleteCartItem]==>  Preparing: UPDATE cart SET isDelete = 1 WHERE commodity_id = ? AND commodity_quantity = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CartMapper.deleteCartItem]==> Parameters: 6(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.deleteCartItem]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b54360e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b54360e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b54360e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5b54360e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16242f6b]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1334783210 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 4(Integer), 5(Integer), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16242f6b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16242f6b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16242f6b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16242f6b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34401650]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@247905979 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 4(Integer), 4(Integer), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34401650]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34401650]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34401650]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34401650]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a3c92d]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@80065764 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? , ? ) 
[DEBUG][20-07-23][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 5(String), 4(String), 3(String), 2(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a3c92d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a3c92d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a3c92d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@47a3c92d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51d75116] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@751225302 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51d75116]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4823b182]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@965079996 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4823b182]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4823b182]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4823b182]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4823b182]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48994ac3]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@383213521 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48994ac3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48994ac3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48994ac3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48994ac3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@98d7c2c]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1276515170 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.clearCart]==>  Preparing: update cart set cart.isDelete = 1 where cart.`id` in ( ? , ? , ? , ? , ? ) 
[DEBUG][20-07-23][lexian.mapper.CartMapper.clearCart]==> Parameters: 5(Integer), 4(Integer), 3(Integer), 2(Integer), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.clearCart]<==    Updates: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@98d7c2c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@98d7c2c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@98d7c2c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@98d7c2c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59318c37]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@348045839 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59318c37]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59318c37]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59318c37]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59318c37]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@193d5d35]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bc42cc]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1805374506 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2045312448 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 34
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bc42cc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bc42cc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bc42cc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29bc42cc]
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 34
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@193d5d35]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@193d5d35]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@193d5d35]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@193d5d35]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@580b3fcb]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1429868028 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ee561e1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@546964553 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@580b3fcb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@580b3fcb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@580b3fcb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@580b3fcb]
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ee561e1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ee561e1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ee561e1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ee561e1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc50e0b]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@325630319 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 34
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc50e0b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc50e0b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc50e0b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cc50e0b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@533a0203]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1060064992 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 4
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@533a0203]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@533a0203]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@533a0203]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@533a0203]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655a463e]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@771594401 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 4
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655a463e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655a463e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655a463e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@655a463e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5244bc86]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@335703981 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 4
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5244bc86]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5244bc86]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5244bc86]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5244bc86]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c37b57c]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@320683595 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 4
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c37b57c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c37b57c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c37b57c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c37b57c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf0a6b6]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@903449563 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 34
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf0a6b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf0a6b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf0a6b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf0a6b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75098be1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@969192765 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 35(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75098be1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75098be1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75098be1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75098be1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ee2079f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1195367131 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 35(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ee2079f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ee2079f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3ee2079f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50397c98]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@919583742 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 34
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50397c98]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50397c98]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50397c98]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@50397c98]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@238e3d62]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@717378609 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 35(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@238e3d62]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@238e3d62]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@238e3d62]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@238e3d62]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2684a6]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1419873911 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 35(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2684a6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2684a6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d2684a6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eed66b4]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1509418335 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 60(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eed66b4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eed66b4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eed66b4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5eed66b4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ad7be7]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@255788239 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 60(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ad7be7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ad7be7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@72ad7be7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@549a80a8]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@169347123 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 67(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@549a80a8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@549a80a8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@549a80a8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@549a80a8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bb0c501]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1798624927 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 67(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bb0c501]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bb0c501]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bb0c501]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@417236de]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1136975349 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 51(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@417236de]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@417236de]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@417236de]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@417236de]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9e50dc9]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@610698267 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 51(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9e50dc9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9e50dc9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9e50dc9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ae915e]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1327961167 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 34
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ae915e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ae915e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ae915e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74ae915e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5911d923]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@547660664 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5911d923]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5911d923]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5911d923]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5911d923]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cbafa40]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1577164906 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 7(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cbafa40]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cbafa40]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cbafa40]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cbafa40]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cab128]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1589133235 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 7(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cab128]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cab128]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cab128]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cab128]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7861a1dd]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1209868135 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 7(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7861a1dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7861a1dd] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7861a1dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7861a1dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7861a1dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7861a1dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29635cf5] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@153458841 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29635cf5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0b76b7]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1006153993 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 7(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0b76b7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0b76b7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0b76b7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d0b76b7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b3ba4f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1986507720 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 7(Integer), 1(Integer), 2020-07-23 20:40:38.41(Timestamp), 0(Integer), 2020-07-23 20:40:38.41(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b3ba4f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b3ba4f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b3ba4f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76b3ba4f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1283ea27]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@742933783 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 35
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1283ea27]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1283ea27]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1283ea27]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1283ea27]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13da3c11]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@335095858 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 35
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13da3c11]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13da3c11]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13da3c11]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13da3c11]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4161ab46]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1100061538 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 8
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4161ab46]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4161ab46]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4161ab46]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4161ab46]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dbdf1d5]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@605237088 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 35
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dbdf1d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dbdf1d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dbdf1d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dbdf1d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85727b3]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1873553666 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 35
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85727b3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85727b3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85727b3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85727b3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f1ffa1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1005505762 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f1ffa1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f1ffa1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f1ffa1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f1ffa1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e8518ec]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@306137222 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e8518ec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e8518ec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e8518ec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e8518ec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8d972d]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1090992049 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.cancelFavorite]==>  Preparing: UPDATE favorites SET is_delete = 1 WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.cancelFavorite]==> Parameters: 41(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.cancelFavorite]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8d972d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8d972d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8d972d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c8d972d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43192320]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1239056915 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 6
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43192320]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43192320]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43192320]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@43192320]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8ae16ef]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@734732680 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 35
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8ae16ef]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8ae16ef]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8ae16ef]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8ae16ef]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b16aa8f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@710485395 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 35
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b16aa8f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b16aa8f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b16aa8f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b16aa8f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f8444]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@322023190 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getAllOrder_COUNT]==>  Preparing: SELECT count(0) FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getAllOrder_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getAllOrder_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getAllOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, orders.`status`, commodity.`name`, order_item.commodity_quantity, commodity.price, order_item.commodity_id FROM orders INNER JOIN order_item ON order_item.order_id = orders.ID INNER JOIN commodity ON order_item.commodity_id = commodity.ID WHERE isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getAllOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getAllOrder]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f8444]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f8444]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f8444]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@587f8444]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f3b4316]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1519430929 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %%(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %%(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f3b4316]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f3b4316]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f3b4316]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f3b4316]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@775af4c3]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@744531906 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllCategory]==>  Preparing: SELECT * FROM category WHERE is_delete=0 AND (category.level=0 OR category.level=3 OR category.level=2 OR category.level=1) 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllCategory]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllCategory]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@775af4c3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@775af4c3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@775af4c3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@775af4c3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aea2dde]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@606053679 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aea2dde]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aea2dde]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aea2dde]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5aea2dde]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62343715]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1739833374 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62343715]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62343715]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62343715]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62343715]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682be6a8]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1506302117 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682be6a8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682be6a8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682be6a8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682be6a8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308ec76b]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1345367361 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d8ebb1d]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1634490406 wrapping com.mysql.cj.jdbc.ConnectionImpl@24d045fd] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 16
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d8ebb1d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d8ebb1d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d8ebb1d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d8ebb1d]
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308ec76b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308ec76b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308ec76b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@308ec76b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de39a3]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2119337818 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao 
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de39a3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de39a3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de39a3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de39a3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ee335a2]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1146984820 wrapping com.mysql.cj.jdbc.ConnectionImpl@34acd59] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao WHERE name LIKE ? 
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: %全新Apple/苹果%(String)
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao WHERE name LIKE ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: %全新Apple/苹果%(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 2
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ee335a2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ee335a2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ee335a2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5ee335a2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29913465]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2112062897 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 79(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29913465]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29913465]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29913465]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29913465]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a838ef]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@563494904 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 79(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a838ef]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a838ef]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a838ef]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f2de32f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@847167049 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f2de32f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f2de32f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f2de32f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f2de32f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb3fa0f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2069183617 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb3fa0f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb3fa0f] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb3fa0f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb3fa0f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb3fa0f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7bb3fa0f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f253b] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1382850719 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8f253b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9964d2c]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1192634646 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9964d2c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9964d2c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9964d2c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9964d2c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632409f3]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@767781242 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 1(Integer), 1(Integer), 2020-07-23 20:56:18.562(Timestamp), 0(Integer), 2020-07-23 20:56:18.562(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632409f3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632409f3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632409f3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632409f3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105ae598]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2114458352 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 13(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105ae598]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105ae598]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105ae598]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@105ae598]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cc66734]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1554281258 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 13(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cc66734]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cc66734]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cc66734]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cc66734]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6c2e4f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1099238135 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 13(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6c2e4f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6c2e4f] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6c2e4f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6c2e4f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6c2e4f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2e6c2e4f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@627ba43f] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@188794933 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@627ba43f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef3ba33]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2090519289 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 13(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef3ba33]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef3ba33]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef3ba33]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ef3ba33]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a6e5adc]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1195659186 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 13(Integer), 1(Integer), 2020-07-23 20:56:21.568(Timestamp), 0(Integer), 2020-07-23 20:56:21.568(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a6e5adc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a6e5adc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a6e5adc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a6e5adc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cee1d65]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@268996682 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 63(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cee1d65]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cee1d65]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cee1d65]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5cee1d65]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13653f94]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2055684499 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ba9aed6] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 63(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13653f94]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13653f94]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13653f94]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4781f340]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@927274823 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity where activity.is_delete = 0 AND activity.id > 10 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4781f340]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4781f340]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4781f340]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46040436]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1024960401 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46040436]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46040436]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@46040436]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f23c8af]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@541188943 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity where activity.is_delete = 0 AND activity.id > 10 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f23c8af]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f23c8af]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f23c8af]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cab91dd]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1719137423 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cab91dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cab91dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2cab91dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d689e51]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@152817799 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity where activity.is_delete = 0 AND activity.id > 10 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d689e51]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d689e51]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d689e51]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8116bd]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@468978342 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8116bd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8116bd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8116bd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6c13da]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@420722047 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity where activity.is_delete = 0 AND activity.id > 10 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6c13da]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6c13da]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a6c13da]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747910e2]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1318778849 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747910e2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747910e2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@747910e2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@793f139d]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@892720899 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity where activity.is_delete = 0 AND activity.id > 10 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39926998]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@523660943 wrapping com.mysql.cj.jdbc.ConnectionImpl@3922c8e4] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@793f139d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@793f139d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@793f139d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@793f139d]
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]<==      Total: 84
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39926998]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39926998]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39926998]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@39926998]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59124a00]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@31961684 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 60(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59124a00]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59124a00]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59124a00]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59124a00]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3140efa6]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1692893535 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 60(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3140efa6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3140efa6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3140efa6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59760c83]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@65050811 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59760c83]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59760c83]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59760c83]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@59760c83]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3757d388]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1830794459 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 4(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3757d388]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3757d388]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3757d388]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3757d388]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca8136c]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1897070782 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 4(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca8136c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca8136c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca8136c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ca8136c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601af42f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1970343720 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 4(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601af42f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601af42f] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 2(String), 2(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601af42f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601af42f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601af42f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@601af42f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78d0661d] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@86326880 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78d0661d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a60132]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@80185484 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 4(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a60132]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a60132]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a60132]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53a60132]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc96d36]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1352843312 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 4(Integer), 1(Integer), 2020-07-23 21:00:23.693(Timestamp), 0(Integer), 2020-07-23 21:00:23.693(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc96d36]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc96d36]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc96d36]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2bc96d36]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b81743c]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@924192461 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 3(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b81743c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b81743c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b81743c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7b81743c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f1e304d]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@196923354 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 3(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f1e304d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f1e304d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f1e304d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3f1e304d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b5e2bc7]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1777308489 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 3(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b5e2bc7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b5e2bc7] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 4(String), 4(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b5e2bc7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b5e2bc7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b5e2bc7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b5e2bc7]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60967213] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1970720915 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@60967213]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6c40f2]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1594363050 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 3(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6c40f2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6c40f2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6c40f2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6c40f2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b8369f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@755863090 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 3(Integer), 1(Integer), 2020-07-23 21:00:25.506(Timestamp), 0(Integer), 2020-07-23 21:00:25.506(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b8369f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b8369f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b8369f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63b8369f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634ccab9]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2007558107 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d2e1e0d]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1180906565 wrapping com.mysql.cj.jdbc.ConnectionImpl@3922c8e4] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 125
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d2e1e0d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d2e1e0d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d2e1e0d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6d2e1e0d]
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 125
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634ccab9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634ccab9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634ccab9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@634ccab9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694e00c6]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@900157384 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d03b7ec]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@505904100 wrapping com.mysql.cj.jdbc.ConnectionImpl@3922c8e4] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 7
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694e00c6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694e00c6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694e00c6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@694e00c6]
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d03b7ec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d03b7ec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d03b7ec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d03b7ec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21fbfb18]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1208230925 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 125
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21fbfb18]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21fbfb18]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21fbfb18]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21fbfb18]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d85f480]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@297151749 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d85f480]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d85f480]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d85f480]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d85f480]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1039941e]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1841620411 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 125
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1039941e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1039941e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1039941e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1039941e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77cf6912]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@65223221 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77cf6912]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77cf6912]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77cf6912]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@77cf6912]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52d192ea]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@825938034 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52d192ea]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52d192ea]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52d192ea]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52d192ea]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a38569b]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2126363407 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 125
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a38569b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a38569b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a38569b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a38569b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2993be4a]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@758353328 wrapping com.mysql.cj.jdbc.ConnectionImpl@3922c8e4] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29325792]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2132655734 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 125
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2993be4a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2993be4a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2993be4a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2993be4a]
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 125
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29325792]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29325792]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29325792]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@29325792]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c44a990]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2065473181 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity where activity.is_delete = 0 AND activity.id > 10 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c44a990]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@382ca5d8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c44a990]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c44a990]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c44a990]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1136967228 wrapping com.mysql.cj.jdbc.ConnectionImpl@3922c8e4] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]<==      Total: 84
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@382ca5d8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@382ca5d8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@382ca5d8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@382ca5d8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1d2bb9]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1974327000 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 60(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1d2bb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1d2bb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1d2bb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c1d2bb9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63e54880]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1643436924 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 60(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63e54880]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63e54880]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@63e54880]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87c0528]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@91366767 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 61(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87c0528]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87c0528]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87c0528]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@87c0528]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@798cf594]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@794405169 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 61(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@798cf594]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@798cf594]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@798cf594]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7910ac9a]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1686955502 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 72(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7910ac9a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7910ac9a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7910ac9a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7910ac9a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17748639]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1124691144 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 72(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17748639]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17748639]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17748639]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4df986dd]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1328863972 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 125
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4df986dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4df986dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4df986dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4df986dd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574eb7b1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1450238575 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574eb7b1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574eb7b1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574eb7b1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@574eb7b1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad281ce]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1477394206 wrapping com.mysql.cj.jdbc.ConnectionImpl@3922c8e4] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad281ce]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad281ce]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad281ce]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6ad281ce]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a15b6e1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@532036145 wrapping com.mysql.cj.jdbc.ConnectionImpl@20ec36bc] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 125
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a15b6e1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a15b6e1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a15b6e1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a15b6e1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31afaf5f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@587585127 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN activity_commodity ON commodity.ID = activity_commodity.commodity_id WHERE commodity.is_delete=0 AND activity_commodity.is_delete=0 AND activity_commodity.activity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31afaf5f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31afaf5f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31afaf5f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31afaf5f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75275557]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@224888435 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN activity_commodity ON commodity.ID = activity_commodity.commodity_id WHERE commodity.is_delete=0 AND activity_commodity.is_delete=0 AND activity_commodity.activity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]==> Parameters: 12(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getSalesItem]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75275557]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75275557]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75275557]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75275557]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de232b]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1199130480 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de232b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de232b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de232b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@18de232b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@335724eb]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@167920292 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 11(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@335724eb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@335724eb] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 2(String), 2(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@335724eb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@335724eb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@335724eb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@335724eb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f93ee86] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1729926322 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f93ee86]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dc44075]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1585043611 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 11(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dc44075]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dc44075]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dc44075]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3dc44075]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140ca06a]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1112597612 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 11(Integer), 1(Integer), 2020-07-23 21:20:25.251(Timestamp), 0(Integer), 2020-07-23 21:20:25.251(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140ca06a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140ca06a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140ca06a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@140ca06a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e23610a]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1753261258 wrapping com.mysql.cj.jdbc.ConnectionImpl@110b3b20] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e23610a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e23610a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e23610a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e23610a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4061e187]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@187769104 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? order by oi.sales desc LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4061e187]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4061e187]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4061e187]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4061e187]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef9a5de]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2071901583 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? order by g.price LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef9a5de]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef9a5de]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef9a5de]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef9a5de]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@690dd0f5]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1352722520 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? order by g.price desc LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@690dd0f5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@690dd0f5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@690dd0f5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@690dd0f5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20fa50fd]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1746152473 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 10(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20fa50fd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20fa50fd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20fa50fd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20fa50fd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ead19b6]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@861283118 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 10(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ead19b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ead19b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ead19b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4ead19b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae9fd0e]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1266771129 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 10(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae9fd0e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae9fd0e] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 2(String), 2(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae9fd0e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae9fd0e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae9fd0e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ae9fd0e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d77571] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1202945438 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7d77571]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@612ecc0]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1725016263 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 10(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@612ecc0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@612ecc0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@612ecc0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@612ecc0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d4541bc]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1596907594 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 10(Integer), 1(Integer), 2020-07-23 21:21:24.566(Timestamp), 0(Integer), 2020-07-23 21:21:24.566(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d4541bc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d4541bc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d4541bc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d4541bc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d2603b]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@986672064 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 10(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d2603b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d2603b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d2603b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@45d2603b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4a8729]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1366582974 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 10(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4a8729]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4a8729] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 2(String), 2(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4a8729]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4a8729]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4a8729]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b4a8729]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@349afe4] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@546909394 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@349afe4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5518731f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2125072042 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 10(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5518731f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5518731f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5518731f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5518731f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75892f09]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@372088127 wrapping com.mysql.cj.jdbc.ConnectionImpl@3e11043a] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 10(Integer), 1(Integer), 2020-07-23 21:21:38.239(Timestamp), 0(Integer), 2020-07-23 21:21:38.239(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75892f09]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75892f09]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75892f09]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@75892f09]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e052cc]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2113451961 wrapping com.mysql.cj.jdbc.ConnectionImpl@12d8ca89] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 10(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e052cc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e052cc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e052cc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@31e052cc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2016b14] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@981221778 wrapping com.mysql.cj.jdbc.ConnectionImpl@12d8ca89] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2016b14]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@239545d2]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1919772532 wrapping com.mysql.cj.jdbc.ConnectionImpl@12d8ca89] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 9
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@239545d2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@239545d2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@239545d2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@239545d2]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c21487c]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1640979236 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 9
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c21487c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c21487c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c21487c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c21487c]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1000653885 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrder]==>  Preparing: INSERT INTO orders(date,description,comment,status) VALUES (?,?,?,?) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrder]==> Parameters: 2020-07-23 21:22:32.618(Timestamp), null, 0(Integer), 0(Integer)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrder]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertShopOrder]==>  Preparing: INSERT INTO shop_order(shop_id,order_id) values ( ?,? ) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertShopOrder]==> Parameters: 1(String), 66(Integer)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertShopOrder]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderItem]==>  Preparing: insert into order_item(order_id,commodity_id,commodity_quantity,status) values ( ?,?,?,1 ) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderItem]==> Parameters: 66(Integer), 10(String), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderItem]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertCustomeOrder]==>  Preparing: insert into customer_order(order_id,customer_id) values(?,?) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertCustomeOrder]==> Parameters: 66(Integer), 1(String)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertCustomeOrder]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderAddress]==>  Preparing: insert into order_address(order_id,address_id) values(?,?) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderAddress]==> Parameters: 66(Integer), 41(Integer)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertOrderAddress]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52c46944]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2779476]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@661416887 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.updateOrderState]==>  Preparing: UPDATE orders, order_item SET order_item.status = ? WHERE orders.ID = ? AND order_item.order_id = orders.ID AND order_item.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.updateOrderState]==> Parameters: 1(Integer), 66(String), null
[DEBUG][20-07-23][lexian.mapper.OrderMapper.updateOrderState]<==    Updates: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2779476]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2779476]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2779476]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2779476]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@763ab90e] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1954623352 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CustomerMapper.selectById]==>  Preparing: SELECT c.*,w.money_amount as moneyAmount,w.wallet_pwd as walletPwd,w.id as walletId FROM `customer` c left JOIN wallet w on c.ID = w.customer_id where c.ID = ? 
[DEBUG][20-07-23][lexian.mapper.CustomerMapper.selectById]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CustomerMapper.selectById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@763ab90e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@258407906 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertBill]==>  Preparing: insert into bill(order_number,name,consume_price,consume_time,order_status) values(?,?,?,?,?) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertBill]==> Parameters: 583500723212241(String), Samsung/三星Galaxy Note10 SM-N9760 5G骁龙855防水游戏智能(String), 5899(String), 2020-07-23 21:22:41.016(Timestamp), 待收货(String)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertBill]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertWalletBill]==>  Preparing: insert into wallet_bill(bill_id,wallet_id) values(?,?) 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertWalletBill]==> Parameters: 56(BigDecimal), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.insertWalletBill]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.updateOrderStatus]==>  Preparing: UPDATE orders, order_item SET order_item.status = ? WHERE orders.ID = ? AND order_item.order_id = orders.ID AND order_item.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.updateOrderStatus]==> Parameters: null, null, null
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.updateOrderStatus]<==    Updates: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.updateOrderStatus]==>  Preparing: UPDATE orders, order_item SET order_item.status = ? WHERE orders.ID = ? AND order_item.order_id = orders.ID AND order_item.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.updateOrderStatus]==> Parameters: null, null, null
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.updateOrderStatus]<==    Updates: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976] from current transaction
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.updateBalance]==>  Preparing: UPDATE wallet SET money_amount = money_amount - ? WHERE customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.updateBalance]==> Parameters: 5899.0(Double), 1(String)
[DEBUG][20-07-23][lexian.mapper.PaymentMapper.updateBalance]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@68a12976]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62bb90e6]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1765973821 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62bb90e6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62bb90e6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62bb90e6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62bb90e6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a814cc]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@975375412 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.deleteCartItem]==>  Preparing: UPDATE cart SET isDelete = 1 WHERE commodity_id = ? AND commodity_quantity = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CartMapper.deleteCartItem]==> Parameters: 73(Integer), 1(Integer), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.deleteCartItem]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a814cc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a814cc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a814cc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a814cc]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d29d993]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1981051987 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 2(Integer), 57(Integer), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d29d993]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d29d993]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d29d993]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d29d993]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37f19ad8]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@711257780 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 3(Integer), 57(Integer), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37f19ad8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37f19ad8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37f19ad8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@37f19ad8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef44bfb]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1947118431 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 4(Integer), 57(Integer), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef44bfb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef44bfb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef44bfb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ef44bfb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@528320d6]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@810451054 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==>  Preparing: UPDATE cart SET commodity_quantity = ? WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]==> Parameters: 2(Integer), 55(Integer), 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.updateQuantity]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@528320d6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@528320d6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@528320d6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@528320d6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10eed8d4]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1975410642 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.selectCommodityByCartIds]==>  Preparing: select g.*,s.specs_name as specsText, c.commodity_quantity as goodCount FROM `cart` c JOIN ( SELECT g.*, si.img AS shopImg, si.NAME AS shopName, si.iD AS shopId FROM commodity g LEFT JOIN ( SELECT s.img, s.NAME, s.ID, sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc ON s.ID = sc.shop_id ) si ON g.ID = si.commodity_id ) g ON c.commodity_id = g.ID LEFT JOIN specs s on c.specs = s.id where c.id in ( ? , ? , ? , ? , ? , ? ) 
[DEBUG][20-07-23][lexian.mapper.CartMapper.selectCommodityByCartIds]==> Parameters: 256(String), 255(String), 21(String), 254(String), 6(String), 5(String)
[DEBUG][20-07-23][lexian.mapper.CartMapper.selectCommodityByCartIds]<==      Total: 6
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10eed8d4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10eed8d4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10eed8d4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10eed8d4]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c917d49] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1894398599 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c917d49]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74643d9e]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1108827546 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 9
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74643d9e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74643d9e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74643d9e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74643d9e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef04100]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1889958714 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==>  Preparing: SELECT (@i :=@i + 1) AS id, commodity.`name`, commodity.price, commodity.image, commodity.`storage`, cart.`commodity_id`, cart.`commodity_quantity`, cart.`customer_id`, cart.`id` as cartID, specs.`specs_name` FROM commodity INNER JOIN cart ON cart.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs.id = specs_commodity.specs_id, (SELECT @i := 0) AS it WHERE cart.customer_id = ? AND cart.isDelete = 0 order by id desc 
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.CartMapper.loadCart]<==      Total: 6
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef04100]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef04100]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef04100]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2ef04100]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa33ffb]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2085916573 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 128
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa33ffb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa33ffb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa33ffb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa33ffb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@776fca3d]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2123717538 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 128
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@776fca3d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@776fca3d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@776fca3d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@776fca3d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2168b806]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@767955069 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 16
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2168b806]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2168b806]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2168b806]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2168b806]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2295365f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@687155063 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 16
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2295365f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2295365f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2295365f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2295365f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4343d0b6]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1118021446 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 16
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4343d0b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4343d0b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4343d0b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4343d0b6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@300207d5]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1435950261 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 16
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@300207d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@300207d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@300207d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@300207d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@99d70d5]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1423333847 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 16
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@99d70d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@99d70d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@99d70d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@99d70d5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dd2782]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1195022776 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==>  Preparing: SELECT orders.ID, orders.date, orders.description, orders.`comment`, order_item.`status`, order_item.commodity_quantity, order_item.commodity_id, commodity.`name`, commodity.price, commodity.image, specs.specs_name FROM customer_order INNER JOIN orders ON customer_order.order_id = orders.ID INNER JOIN order_item ON orders.ID = order_item.order_id INNER JOIN commodity ON order_item.commodity_id = commodity.ID INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID INNER JOIN specs ON specs_commodity.specs_id = specs.id WHERE customer_order.is_delete = 0 AND orders.isDelete = 0 AND order_item.is_delete = 0 AND customer_order.customer_id = ? order by orders.ID desc 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getCustomerOrder]<==      Total: 16
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dd2782]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dd2782]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dd2782]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6dd2782]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d216990]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1432479212 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 128
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d216990]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d216990]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d216990]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d216990]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70f05819]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1435316726 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 19(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 19(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 2
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70f05819]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70f05819]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70f05819]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70f05819]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70fa6c84]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1024604579 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 55(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70fa6c84]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70fa6c84]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70fa6c84]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@70fa6c84]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c0db662]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@944968033 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 55(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c0db662]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c0db662]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c0db662]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36a60ad0]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1838288364 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36a60ad0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36a60ad0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36a60ad0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@36a60ad0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7415b679]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@997946843 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7415b679]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7415b679]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7415b679]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7415b679]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b7f6188]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1422169613 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b7f6188]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b7f6188] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 2(String), 2(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b7f6188]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b7f6188]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b7f6188]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b7f6188]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4833c31d] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@951533800 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4833c31d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62784ab1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@909631664 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62784ab1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62784ab1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62784ab1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@62784ab1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219e0b98]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@914947907 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 1(Integer), 1(Integer), 2020-07-23 21:24:43.494(Timestamp), 0(Integer), 2020-07-23 21:24:43.494(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219e0b98]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219e0b98]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219e0b98]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@219e0b98]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4122c219]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1748213429 wrapping com.mysql.cj.jdbc.ConnectionImpl@13389eb1] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==>  Preparing: SELECT count(0) FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN (SELECT sum(commodity_quantity) AS sales, commodity_id FROM order_item GROUP BY commodity_id) oi ON g.id = oi.commodity_id WHERE gc.category_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]==> Parameters: 8(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==>  Preparing: SELECT g.ID, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales FROM commodity g JOIN category_commodity gc ON g.ID = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id where gc.category_id = ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]==> Parameters: 8(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityByCategoryId]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4122c219]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4122c219]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4122c219]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4122c219]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c2896e3]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1967627943 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c2896e3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c2896e3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c2896e3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c2896e3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf6ee18]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1513430592 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==>  Preparing: SELECT s.id FROM specs s JOIN specs_commodity sc ON s.id = sc.specs_id where sc.commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsByCommodityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf6ee18]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf6ee18] from current transaction
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==>  Preparing: SELECT id, specs_name, pid, sort FROM specs where id in ( ? ) or pid in ( ? ) 
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]==> Parameters: 2(String), 2(String)
[DEBUG][20-07-23][lexian.mapper.SpecsMapper.selectSpecsInList]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf6ee18]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf6ee18]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf6ee18]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6cf6ee18]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@392102c9] was not registered for synchronization because synchronization is not active
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1268042931 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will not be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==>  Preparing: SELECT c.* FROM `coupon` c join cutomer_coupon cc on c.id = cc.coupon_id where cc.customer_id =? 
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CouponMapper.selectCouponByUid]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@392102c9]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbfc96b]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@564463423 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==>  Preparing: SELECT addtime FROM `favorites` where commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.selectFavoritesByCommodityIdAndUid]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbfc96b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbfc96b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbfc96b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7dbfc96b]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4620d414]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1314363364 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==>  Preparing: insert into browsing_record (commodity_id, customer_id, browsing_time, isDelete, date) values (?, ?, ?, ?, ?) 
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]==> Parameters: 1(Integer), 1(Integer), 2020-07-23 21:24:48.415(Timestamp), 0(Integer), 2020-07-23 21:24:48.415(Timestamp)
[DEBUG][20-07-23][lexian.mapper.BrowsingRecordMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4620d414]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4620d414]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4620d414]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4620d414]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@348f78b3]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@686068540 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.insert]==>  Preparing: insert into favorites(commodity_id, customer_id, addtime,is_delete) values(?,?,?,0) 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.insert]==> Parameters: 1(Integer), 1(String), 2020-07-23 21:24:51.879(Timestamp)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.insert]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@348f78b3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@348f78b3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@348f78b3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@348f78b3]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5df1495f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@16374325 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 130
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5df1495f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5df1495f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5df1495f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5df1495f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c237eb]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@2066700215 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 8
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c237eb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c237eb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c237eb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66c237eb]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7132152]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1278003650 wrapping com.mysql.cj.jdbc.ConnectionImpl@13389eb1] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 8
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7132152]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7132152]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7132152]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7132152]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@774db68]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1464222218 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 130
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@774db68]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@774db68]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@774db68]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@774db68]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79b07ca0]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@720478123 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 130
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79b07ca0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79b07ca0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79b07ca0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@79b07ca0]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d35cc37]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1658976984 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==>  Preparing: SELECT a.ID, a.province, a.city, a.area, a.location, a.postcode, a.name, a.phone, a.is_delete,ca.status FROM customer_address ca LEFT JOIN address a ON ca.address_id = a.id where ca.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.AddressMapper.selectAddressByCustomerId]<==      Total: 9
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d35cc37]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d35cc37]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d35cc37]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d35cc37]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f58189]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@733820804 wrapping com.mysql.cj.jdbc.ConnectionImpl@13389eb1] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 130
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f58189]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f58189]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f58189]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@55f58189]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76f2f8c5]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1419547992 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 8
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76f2f8c5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76f2f8c5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76f2f8c5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@76f2f8c5]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a717321]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@160219548 wrapping com.mysql.cj.jdbc.ConnectionImpl@13389eb1] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 8
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a717321]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a717321]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a717321]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6a717321]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2df0d698]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@92806257 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.cancelFavorite]==>  Preparing: UPDATE favorites SET is_delete = 1 WHERE commodity_id = ? AND customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.cancelFavorite]==> Parameters: 1(String), 1(String)
[DEBUG][20-07-23][lexian.mapper.FavoritesMapper.cancelFavorite]<==    Updates: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2df0d698]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2df0d698]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2df0d698]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2df0d698]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cb7908]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@7406163 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity INNER JOIN favorites ON commodity.ID = favorites.commodity_id WHERE commodity.is_delete=0 AND favorites.is_delete=0 AND favorites.customer_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getFavorites]<==      Total: 7
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cb7908]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cb7908]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cb7908]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51cb7908]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c5b0a14]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@637255193 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 130
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c5b0a14]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c5b0a14]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c5b0a14]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4c5b0a14]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4982f556]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@297787740 wrapping com.mysql.cj.jdbc.ConnectionImpl@13389eb1] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 130
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4982f556]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4982f556]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4982f556]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4982f556]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba9820e]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1365781327 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-23][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 1(Integer)
[DEBUG][20-07-23][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 8
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba9820e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba9820e] from current transaction
[DEBUG][20-07-23][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-23][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 2(Integer)
[DEBUG][20-07-23][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba9820e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Fetched SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba9820e] from current transaction
[DEBUG][20-07-23][lexian.mapper.ManagerMapper.getRoleManagers]==>  Preparing: SELECT system_manager.ID, system_manager.`name`, system_manager.phone, system_manager.age, system_manager.sex, system_manager.nick_name, system_manager.birthday, system_manager.role FROM system_manager WHERE role = ? AND is_delete=0 
[DEBUG][20-07-23][lexian.mapper.ManagerMapper.getRoleManagers]==> Parameters: 3(Integer)
[DEBUG][20-07-23][lexian.mapper.ManagerMapper.getRoleManagers]<==      Total: 3
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba9820e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba9820e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba9820e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ba9820e]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@268f321a]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1162081096 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==>  Preparing: SELECT count(0) FROM jiufen WHERE is_delete = 0 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getJiuFenOrder_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getJiuFenOrder]==>  Preparing: SELECT ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime FROM jiufen WHERE is_delete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getJiuFenOrder]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.OrderMapper.getJiuFenOrder]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@268f321a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@268f321a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@268f321a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@268f321a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@377b6203]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1266515296 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==>  Preparing: SELECT count(0) FROM commodity WHERE commodity.is_delete = 0 AND commodity.name LIKE ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]==> Parameters: %%(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`status`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 AND commodity.name LIKE ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName]==> Parameters: %%(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllShopCommodityByName]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@377b6203]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@377b6203]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@377b6203]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@377b6203]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@320b43cd]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1573874703 wrapping com.mysql.cj.jdbc.ConnectionImpl@13389eb1] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllCategory]==>  Preparing: SELECT * FROM category WHERE is_delete=0 AND (category.level=0 OR category.level=3 OR category.level=2 OR category.level=1) 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllCategory]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getAllCategory]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@320b43cd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@320b43cd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@320b43cd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@320b43cd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed1fed8]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@220899789 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed1fed8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed1fed8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed1fed8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ed1fed8]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7645092d]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@924082896 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getMaxShopId]==>  Preparing: select max(shop.id) from shop 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getMaxShopId]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getMaxShopId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7645092d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7645092d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7645092d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7645092d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@138e1664]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@870846888 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@138e1664]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@138e1664]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@138e1664]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@138e1664]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f2abd1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@789754939 wrapping com.mysql.cj.jdbc.ConnectionImpl@13389eb1] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getMaxActivityId]==>  Preparing: select max(activity.id) from activity 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getMaxActivityId]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b88fbd]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1871626285 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 20(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 16
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b88fbd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b88fbd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b88fbd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67b88fbd]
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getMaxActivityId]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f2abd1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f2abd1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f2abd1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53f2abd1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eefe01]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@785730550 wrapping com.mysql.cj.jdbc.ConnectionImpl@71d20882] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao 
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eefe01]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eefe01]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eefe01]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@38eefe01]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ff3a737]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@670028556 wrapping com.mysql.cj.jdbc.ConnectionImpl@13389eb1] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==>  Preparing: SELECT count(0) FROM taobao WHERE name LIKE ? 
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]==> Parameters: %全新Apple/苹果%(String)
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==>  Preparing: SELECT ID,name,price,peopleNum FROM taobao WHERE name LIKE ? LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]==> Parameters: %全新Apple/苹果%(String), 10(Integer)
[DEBUG][20-07-23][lexian.mapper.TaobaoMapper.getAlltaobaoGoods]<==      Total: 2
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ff3a737]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ff3a737]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ff3a737]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7ff3a737]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3099ee4a]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1919100869 wrapping com.mysql.cj.jdbc.ConnectionImpl@406ce2b0] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==>  Preparing: SELECT count(0) FROM activity INNER JOIN activity_shop ON activity.id = activity_shop.activity_id INNER JOIN shop ON shop.id = activity_shop.shop_id WHERE activity.is_delete = 0 AND activity_shop.is_delete = 0 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity inner join activity_shop on activity.id = activity_shop.activity_id inner join shop on shop.id = activity_shop.shop_id where activity.is_delete = 0 and activity_shop.is_delete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getAllActivity]<==      Total: 6
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3099ee4a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3099ee4a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3099ee4a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3099ee4a]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48498fdd]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1914285340 wrapping com.mysql.cj.jdbc.ConnectionImpl@406ce2b0] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==>  Preparing: SELECT count(0) FROM shop WHERE shop.isDelete = 0 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop_COUNT]<==      Total: 1
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==>  Preparing: select shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description from shop where shop.isDelete = 0 LIMIT ? 
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]==> Parameters: 10(Integer)
[DEBUG][20-07-23][lexian.mapper.ShopMapper.getAllShop]<==      Total: 10
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48498fdd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48498fdd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48498fdd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48498fdd]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34c7f87d]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@537651412 wrapping com.mysql.cj.jdbc.ConnectionImpl@6dc5cf5e] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity where activity.is_delete = 0 AND activity.id > 10 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==> Parameters: 
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f19e77f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@411304257 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af3fd6e] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]<==      Total: 84
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f19e77f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f19e77f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f19e77f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7f19e77f]
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34c7f87d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34c7f87d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34c7f87d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@34c7f87d]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74af2aec]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@9092915 wrapping com.mysql.cj.jdbc.ConnectionImpl@6dc5cf5e] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40f4edf6]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1478643403 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af3fd6e] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 127
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 127
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40f4edf6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74af2aec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40f4edf6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74af2aec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40f4edf6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40f4edf6]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74af2aec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74af2aec]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a0b8130]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1225399971 wrapping com.mysql.cj.jdbc.ConnectionImpl@6dc5cf5e] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 127
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a0b8130]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a0b8130]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a0b8130]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5a0b8130]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25d1ef75]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@129905118 wrapping com.mysql.cj.jdbc.ConnectionImpl@6dc5cf5e] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@421964ac]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1906127270 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af3fd6e] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==>  Preparing: SELECT commodity.ID, browsing_record.browsing_time, browsing_record.commodity_id, commodity.`name`, commodity.price, commodity.image FROM browsing_record INNER JOIN commodity on browsing_record.commodity_id = commodity.ID WHERE browsing_record.customer_id = ? AND browsing_record.isDelete= 0 ORDER BY browsing_record.ID DESC 
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]==> Parameters: 1(String)
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 127
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25d1ef75]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25d1ef75]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25d1ef75]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@25d1ef75]
[DEBUG][20-07-23][lexian.mapper.UniBrowsingRecordMapper.getHistory]<==      Total: 127
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@421964ac]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@421964ac]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@421964ac]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@421964ac]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534a17b1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1687203109 wrapping com.mysql.cj.jdbc.ConnectionImpl@6dc5cf5e] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==>  Preparing: select activity.id, activity.`name`, activity.description, activity.img, activity.createTime, activity.beginTime, activity.endTime, activity.type, activity.status from activity where activity.is_delete = 0 AND activity.id > 10 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.ActivityMapper.getIndexActivity]<==      Total: 5
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e21e700]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534a17b1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534a17b1]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1964608127 wrapping com.mysql.cj.jdbc.ConnectionImpl@2af3fd6e] will be managed by Spring
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534a17b1]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534a17b1]
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==>  Preparing: SELECT Commodity.ID, Commodity.modify_time, Commodity.introduction, Commodity.`name`, Commodity.`image`, Commodity.`price`, Commodity.`storage`, Commodity.`specification`, Commodity.`index`, Commodity.`is_delete` FROM commodity WHERE commodity.is_delete=0 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]==> Parameters: 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.getIndexCommodity]<==      Total: 84
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e21e700]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e21e700]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e21e700]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e21e700]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21eb57f]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@271465443 wrapping com.mysql.cj.jdbc.ConnectionImpl@6dc5cf5e] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==>  Preparing: SELECT g.id, g.modify_time, g.introduction, g.NAME, g.image, g.price, g.STORAGE, g.specification, g.STATUS, g.is_delete, oi.sales, bi.browseCount, gc.image1, gc.image2, gc.image3, gc.image4, gc.image5, gc.image6, si.`name` as shopName, si.img as shopImg, si.ID as shopId FROM `commodity` g LEFT JOIN graphic_commodity gc on g.id = gc.commodity_id LEFT JOIN ( SELECT sum( commodity_quantity ) AS sales, commodity_id FROM order_item GROUP BY commodity_id ) oi ON g.id = oi.commodity_id LEFT JOIN (SELECT commodity_id,COUNT(*) as browseCount FROM `browsing_record` GROUP BY commodity_id ) bi on g.id = bi.commodity_id LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id WHERE g.id = ? 
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]==> Parameters: 79(String)
[DEBUG][20-07-23][lexian.mapper.CommodityMapper.selectCommodityById]<==      Total: 1
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21eb57f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21eb57f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21eb57f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@21eb57f]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Creating a new SqlSession
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d9148]
[DEBUG][20-07-23][org.mybatis.spring.transaction.SpringManagedTransaction]JDBC Connection [HikariProxyConnection@1983908030 wrapping com.mysql.cj.jdbc.ConnectionImpl@6dc5cf5e] will be managed by Spring
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==>  Preparing: select c.comment_id, c.customer_id, c.commodity_id, c.comment_level, c.comment_time, c.comment_content, c.comment_image, c.additional_comment_content, c.additional_comment_time, c.additional_comment_image, c.is_delete,u.name as userName,u.user_image AS userImage from comment c LEFT JOIN customer u on c.customer_id = u.id where commodity_id = ? 
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]==> Parameters: 79(String)
[DEBUG][20-07-23][lexian.mapper.CommentMapper.selectByCommodityId]<==      Total: 0
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d9148]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d9148]
[DEBUG][20-07-23][org.mybatis.spring.SqlSessionUtils]Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26d9148]
