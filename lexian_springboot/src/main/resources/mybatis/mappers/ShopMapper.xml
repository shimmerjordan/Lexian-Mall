<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lexian.mapper.ShopMapper" >
  <resultMap id="BaseResultMap" type="Shop" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="establishTime" property="establishTime" jdbcType="TIMESTAMP" />
    <result column="kind" property="kind" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="isDelete" property="isDelete" jdbcType="INTEGER" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>

<!--  SQL获取全部店铺信息-->
  <select id="getAllShop" resultType="Shop">
    select
    shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description
    from
    shop
    where shop.isDelete = 0
  </select>

<!--  SQL获取店铺最大id-->
  <select id="getMaxShopId" resultType="java.lang.Integer">
    select max(shop.id)
    from shop
  </select>

<!--  SQL更新店铺信息，通过传回的参数-->
  <update id="updateShop" parameterType="java.util.HashMap">
    update shop
    set
    shop.`name` = #{name},
    shop.kind = #{kind},
    shop.status = #{status},
    shop.tag = #{tag}
    where
    shop.id = #{id}
  </update>

<!--  SQL删除店铺信息，更新isDelete为1，通过shop.id-->
  <update id="deleteShop">
    update shop
    set shop.isDelete = 1
    where shop.id = #{id}
  </update>

<!--  SQL查找店铺信息通过传入参数(name,id,beginTime,endTime....)-->
  <select id="searchShopByInformation" resultType="Shop" parameterType="java.lang.String">
    select
    shop.id, shop.`name`, shop.establishTime, shop.kind, shop.status, shop.isDelete, shop.img, shop.tag ,shop.description
    from shop
    <where>
      shop.isDelete = 0 
      <if test="name != '%null%' ">
      and shop.`name` like  #{name}
      </if>
      <if test="id != null">
        and shop.id = #{id}
      </if>
      <if test="beginTime != null and endTime != null">
        and shop.establishTime<![CDATA[>=]]>#{beginTime} and shop.establishTime<![CDATA[<=]]>#{endTime}
      </if>
      <if test="status != null">
        and shop.status = #{status}
      </if>
    </where>
  </select>

<!--  SQL插入店铺信息，通过参数-->
  <insert id="insertShop" parameterType="java.util.HashMap">
    insert into
    shop(id, `name`,establishTime, kind, status, tag , description, isDelete, img)
    values
    (#{shopId}, #{shopName}, #{date},#{unitId}, 0,#{tag}, #{description}, 0, 'http://image.yy.com/yywebalbumbs2bucket/144152f8680f421599233c6ffcfcef49_1476265267104.jpeg')
  </insert>

<!--  批量更新店铺状态为正在营业，根据传过来的list，用foreach循环逐个更细状态-->
  <update id="updateShopStatus0" parameterType="java.util.List">
    update shop
    set shop.status = 0
    where shop.id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item.id}
    </foreach>
  </update>

<!--  批量更新店铺信息为暂停营业，根据传过来的list，用foreach循环逐个更细状态-->
  <update id="updateShopStatus1" parameterType="java.util.List">
    update shop
    set shop.status = 1
    where shop.id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item.id}
    </foreach>
  </update>

<!-- SQL更新店铺状态为店铺关闭，根据传过来的list，用foreach循环逐个更细状态-->
  <update id="updateShopStatus2" parameterType="java.util.List">
    update shop
    set shop.status = 2
    where shop.id in
    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
      #{item.id}
    </foreach>
  </update>
</mapper>