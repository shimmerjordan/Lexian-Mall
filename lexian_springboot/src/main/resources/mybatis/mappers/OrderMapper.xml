<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lexian.mapper.OrderMapper">
    <resultMap id="order_map" type="Order">
        <id property="ID" column="ID"/>
        <result property="date" column="date"/>
        <result property="description" column="description"/>
        <result property="name" column="name"/>
        <result property="comment" column="comment"/>
        <result property="status" column="status"/>
        <result property="quantity" column="commodity_quantity"/>
        <result property="price" column="price"/>
        <result property="commodity" column="commodity_id"/>
    </resultMap>

    <select id="getAllOrder" resultMap="order_map">
        SELECT
        orders.ID,
        orders.date,
        orders.description,
        orders.`comment`,
        orders.`status`,
        commodity.`name`,
        order_item.commodity_quantity,
        commodity.price,
        order_item.commodity_id
        FROM
        orders
        INNER JOIN order_item ON order_item.order_id = orders.ID
        INNER JOIN commodity ON order_item.commodity_id = commodity.ID
        WHERE
        isDelete = 0
        <if test="name != null and name != '' ">
            AND commodity.`name` like CONCAT('%',CONCAT(#{name},'%'))
        </if>
        <if test="comment != null and comment != '' ">
            AND orders.`comment`=#{comment}
        </if>
        <if test="status != null and status != '' ">
            AND orders.`status`=#{status}
        </if>
    </select>

    <select id="getDateRange" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM
        orders
        WHERE
        orders.date BETWEEN #{0} AND #{1}
        GROUP BY
        orders.date
    </select>

    <insert id="addOrder"  parameterType="java.util.HashMap">
        INSERT INTO
        orders(orders.date,orders.description,orders.`comment`,orders.`status`)
        VALUES
        (#{date },#{description},#{comment},#{status})
    </insert>

    <insert id="addOrder_Item" parameterType="java.util.HashMap">
        INSERT INTO
        order_item(order_id,commodity_id,commodity_quantity)
        VALUES
        ((SELECT LAST_INSERT_ID()),#{commodity},#{quantity})
    </insert>

    <update id="updateOrder" parameterType="java.util.HashMap">
        UPDATE
        orders
        SET
        orders.date=#{ date },
        orders.description=#{ description },
        orders.`comment`=#{ comment },
        orders.`status`=#{ status }
        WHERE
        orders.ID=#{id}
    </update>

    <update id="updateOrder_Item" parameterType="java.util.HashMap">
        UPDATE
        order_item
        SET
        order_item.commodity_quantity=#{ quantity },
        order_item.commodity_id = #{ commodity }
        WHERE
        order_item.order_id=#{ id }
    </update>


    <select id="getUserOrder" parameterType="java.lang.String" resultMap="order_map">
        SELECT
	     orders.date,
	     orders.description,
	     orders.`comment`,
	     orders.`status`,
	     commodity.image,
	     order_item.commodity_quantity,
	     commodity.`name`,
	     commodity.price
        FROM
	     customer_order
	    INNER JOIN
	     orders ON customer_order.order_id = orders.ID
	    INNER JOIN
	     order_item ON orders.ID = order_item.order_id
	    INNER JOIN
	     commodity ON order_item.commodity_id = commodity.ID
        WHERE
	     customer_order.is_delete = 0 AND
	     orders.isDelete = 0 AND
	     customer_order.customer_id = #{ userID }
    </select>

    <resultMap id="jiufenorder_map" type="JiuFenOrder">
        <id property="id" column="ID"/>
        <result property="customer_id" column="customer_id"/>
        <result property="order_id" column="order_id"/>
        <result property="shop_id" column="shop_id"/>
        <result property="reason" column="reason"/>
        <result property="result" column="result"/>
        <result property="status" column="status"/>
        <result property="handTime" column="handTime"/>
        <result property="applyTime" column="applyTime"/>
    </resultMap>
    <select id="getJiuFenOrder" resultMap="jiufenorder_map">
        SELECT
        ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime
        FROM
        jiufen
        WHERE
        is_delete = 0
    </select>

    <resultMap id="jiufenorder_map2" type="JiuFenOrder">
        <id property="id" column="ID"/>
        <result property="customer_id" column="customer_id"/>
        <result property="order_id" column="order_id"/>
        <result property="shop_id" column="shop_id"/>
        <result property="reason" column="reason"/>
        <result property="result" column="result"/>
        <result property="status" column="status"/>
        <result property="handTime" column="handTime"/>
        <result property="applyTime" column="applyTime"/>
    </resultMap>
    <select id="getJiuFenOrderByID" resultMap="jiufenorder_map2" parameterType="java.lang.Integer">
        SELECT
        ID,customer_id,order_id,shop_id,reason,result,status,handTime,applyTime
        FROM
        jiufen
        WHERE
        is_delete = 0 AND ID = #{id}
    </select>

    <update id="UpdateJiuFenOrder" parameterType="java.util.HashMap">
        UPDATE
        jiufen
        SET
        handTime=#{handTime},
        status=1,
        result=#{result}
        WHERE
        ID = #{id}
    </update>

    <update id="DeleteJiuFenOrder" parameterType="java.util.HashMap">
        UPDATE
        jiufen
        SET
        is_delete=1
        WHERE
        ID=#{id}
    </update>

    <update id="deleteOrder" parameterType="java.lang.Integer">
        UPDATE
        orders
        SET
        isDelete = 1
        WHERE
        orders.ID = #{ ID }
    </update>

    <select id="getCustomerOrder" resultType="java.util.HashMap" parameterType="java.util.HashMap">
      SELECT
        orders.ID,
        orders.date,
        orders.description,
        orders.`comment`,
        order_item.`status`,
        order_item.commodity_quantity,
        order_item.commodity_id,
        commodity.`name`,
        commodity.price,
        commodity.image,
        specs.specs_name
      FROM
        customer_order
        INNER JOIN orders ON customer_order.order_id = orders.ID
        INNER JOIN order_item ON orders.ID = order_item.order_id
        INNER JOIN commodity ON order_item.commodity_id = commodity.ID
        INNER JOIN specs_commodity ON specs_commodity.commodity_id = commodity.ID
        INNER JOIN specs ON specs_commodity.specs_id = specs.id
      WHERE
        customer_order.is_delete = 0
        AND orders.isDelete = 0
        AND order_item.is_delete = 0
        AND customer_order.customer_id = #{customerId}
      order by orders.ID desc
    </select>


    <!-- @note 取消订单接口，将取消的订单status设为8 -->
    <!-- @parameter orderID -->
    <!-- @note 接口cancelCustomerOrder -->
    <update id="cancelCustomerOrder" parameterType="java.util.HashMap">
        UPDATE
            orders,
            order_item
        SET
            order_item.status = 8
        WHERE
            orders.ID = #{ orderID }
            AND order_item.order_id = orders.ID
            AND order_item.commodity_id = #{commodityID}
    </update>

    <!-- @note 取消订单接口，将取消的订单isDelete设为1 -->
    <!-- @parameter orderID -->
    <!-- @note 接口deleteCustomerOrder -->
    <update id="deleteCustomerOrder" parameterType="java.util.HashMap">
        UPDATE
            orders,
            order_item
        SET
            order_item.is_delete = 1
        WHERE
            orders.ID = #{ orderID }
            AND order_item.order_id = orders.ID
            AND order_item.commodity_id = #{commodityID}
    </update>

    <!-- 根据订单查询店铺ID -->
    <select id="selectShopByOrder" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT
            shop_commodity.shop_id
        FROM
            order_item
            INNER JOIN orders ON order_item.order_id = orders.ID
            INNER JOIN shop_commodity ON order_item.commodity_id = shop_commodity.commodity_id
        WHERE
            orders.ID = #{orderID}
            AND order_item.commodity_id = #{commodityID}
    </select>

    <insert id="applyCustomerJiufenOrder" parameterType="java.util.HashMap">
        INSERT INTO
        jiufen(customer_id,order_id,shop_id,reason,applyTime,status,is_delete)
        VALUES
        (#{userID},#{orderID},#{shopID},#{reason},#{applyTime},0,0)
    </insert>

    <update id="updateOrderState" parameterType="java.util.HashMap">
        UPDATE
            orders,
            order_item
        SET
            order_item.status = #{status}
        WHERE
            orders.ID = #{ orderID }
            AND order_item.order_id = orders.ID
            AND order_item.commodity_id = #{commodityID}
    </update>

    <insert id="commentOrder" parameterType="java.util.HashMap">
        INSERT INTO
        comment(customer_id,commodity_id,comment_level,comment_time,comment_content,is_delete)
        VALUES
        (#{userID},#{commodityID},#{commentLevel},#{comment_time},#{commentContent},0)
    </insert>

</mapper>