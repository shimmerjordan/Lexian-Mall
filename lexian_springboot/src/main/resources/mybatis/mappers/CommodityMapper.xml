<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lexian.mapper.CommodityMapper">
	<resultMap id="commodity_map" type="Commodity">
		<id property="ID" column="Commodity.ID" />
		<result property="modify_time" column="Commodity.modify_time" />
		<result property="introduction" column="Commodity.introduction" />
		<result property="name" column="Commodity.`name`" />
		<result property="image" column="Commodity.`image`" />
		<result property="price" column="Commodity.`price`" />
		<result property="storage" column="Commodity.`storage`" />
		<result property="specification" column="Commodity.`specification`" />
		<result property="status" column="Commodity.`status`" />
		<result property="is_delete" column="Commodity.`is_delete`" />
		<result property="index" column="Commodity.`index`"/>
	</resultMap>

	<select id="getAllShopCommodity" resultType="Commodity">
		SELECT
		Commodity.ID,
		Commodity.modify_time,
		Commodity.introduction,
		Commodity.`name`,
		Commodity.`image`,
		Commodity.`price`,
		Commodity.`storage`,
		Commodity.`specification`,
		Commodity.`status`,
		Commodity.`is_delete`
		FROM
		commodity
		INNER JOIN shop_commodity ON commodity.ID =
		shop_commodity.commodity_id
		INNER JOIN shop ON shop.ID =
		shop_commodity.shop_id
		WHERE
		commodity.is_delete=0 AND
		shop_commodity.isDelete=0
	</select>

	<update id="updateGood" parameterType="java.util.HashMap">
		UPDATE commodity
		SET
		commodity.name=#{name},
		commodity.modify_time=NOW(),
		commodity.storage=#{storage},
		commodity.price=#{price},
		commodity.introduction=#{introduction}
		WHERE
		commodity.ID=#{id}
	</update>

	<select id="selectCommodityByCategoryId" resultType="lexian.entity.Commodity"
		parameterType="lexian.entity.Commodity">
		SELECT
		g.ID,
		g.modify_time,
		g.introduction,
		g.NAME,
		g.image,
		g.price,
		g.STORAGE,
		g.specification,
		g.STATUS,
		g.is_delete,
		oi.sales
		FROM
		commodity g
		JOIN category_commodity gc ON g.ID = gc.commodity_id
		LEFT JOIN ( SELECT
		sum( commodity_quantity ) AS sales, commodity_id FROM
		order_item GROUP
		BY commodity_id ) oi ON g.id = oi.commodity_id
		where gc.category_id =
		#{categoryId}
		<if test="sortType != null and sortType !=''">
			<if test="sortType == 1">
				order by oi.sales desc
			</if>
			<if test="sortType == 2">
				order by g.price
			</if>
			<if test="sortType == 3">
				order by g.price desc
			</if>

		</if>
	</select>

	<update id="deleteGood">
		UPDATE shop_commodity
		SET shop_commodity.isDelete=1
		WHERE shop_commodity.commodity_id=#{id}
	</update>

	<select id="getIndexCommodity" resultType="Commodity">
		SELECT
		Commodity.ID,
		Commodity.modify_time,
		Commodity.introduction,
		Commodity.`name`,
		Commodity.`image`,
		Commodity.`price`,
		Commodity.`storage`,
		Commodity.`specification`,
		Commodity.`index`,
		Commodity.`is_delete`
		FROM
		commodity
		WHERE
		commodity.is_delete=0
	</select>

	<insert id="addGood" parameterType="java.util.HashMap">
		INSERT INTO
		commodity(name,modify_time,price,storage,specification,status,image,introduction,is_delete)
		VALUES
		(#{name},#{modify_time},#{price},#{storage},#{specification},#{status},#{image},#{introduction},0)
	</insert>

	<select id="selectCommodityById" parameterType="java.lang.String"
		resultType="lexian.entity.Commodity">
		SELECT
		g.id,
		g.modify_time,
		g.introduction,
		g.NAME,
		g.image,
		g.price,
		g.STORAGE,
		g.specification,
		g.STATUS,
		g.is_delete,
		oi.sales,
		bi.browseCount,
		gc.image1,
		gc.image2,
		gc.image3,
		gc.image4,
		gc.image5,
		gc.image6,
		si.`name` as shopName,
		si.img as shopImg,
		si.ID as shopId
		FROM
		`commodity` g
		LEFT JOIN graphic_commodity gc
		on g.id =
		gc.commodity_id
		LEFT JOIN ( SELECT sum(
		commodity_quantity )
		AS sales,
		commodity_id FROM
		order_item GROUP BY
		commodity_id ) oi ON
		g.id =
		oi.commodity_id
		LEFT JOIN (SELECT
		commodity_id,COUNT(*) as
		browseCount
		FROM
		`browsing_record` GROUP BY
		commodity_id ) bi on g.id =
		bi.commodity_id
		LEFT JOIN (SELECT s.ID,s.img,s.name,sc.commodity_id FROM shop s LEFT JOIN
		shop_commodity sc on s.ID = sc.shop_id) si on g.ID = si.commodity_id
		WHERE
		g.id = #{commodityId}
	</select>

	<resultMap id="Category_map" type="Category">
		<id property="ID" column="Category.ID" />
		<result property="name" column="Category.`name`" />
		<result property="description" column="Category.`description`" />
		<result property="level" column="Category.`level`" />
		<result property="is_delete" column="Category.`is_delete`" />
	</resultMap>

	<select id="getAllCategory" resultType="Category">
		SELECT *
		FROM
		category
		WHERE
		is_delete=0 AND (category.level=0 OR category.level=3 OR
		category.level=2 OR category.level=1)
	</select>

	<select id="getIndexSearchCommodity" resultType="Commodity" parameterType="java.lang.String">
		SELECT
		Commodity.ID,
		Commodity.modify_time,
		Commodity.introduction,
		Commodity.`name`,
		Commodity.`image`,
		Commodity.`price`,
		Commodity.`storage`,
		Commodity.`specification`,
		Commodity.`index`,
		Commodity.`is_delete`
		FROM
		commodity
		WHERE
		commodity.is_delete=0 AND
        commodity.name LIKE #{name}
	</select>

	<select id="getFavorites" resultType="Commodity"
			parameterType="java.lang.String">
		SELECT
		Commodity.ID,
		Commodity.modify_time,
		Commodity.introduction,
		Commodity.`name`,
		Commodity.`image`,
		Commodity.`price`,
		Commodity.`storage`,
		Commodity.`specification`,
		Commodity.`status`,
		Commodity.`is_delete`
		FROM
		commodity
		INNER JOIN
		favorites ON commodity.ID =
		favorites.commodity_id
		WHERE
		commodity.is_delete=0 AND
		favorites.isDelete=0 AND
        favorites.customer_id = #{userID}
	</select>

	<resultMap id="commodity_map2" type="Commodity">
		<id property="ID" column="Commodity.ID" />
		<result property="modify_time" column="Commodity.modify_time" />
		<result property="introduction" column="Commodity.introduction" />
		<result property="name" column="Commodity.`name`" />
		<result property="image" column="Commodity.`image`" />
		<result property="price" column="Commodity.`price`" />
		<result property="storage" column="Commodity.`storage`" />
		<result property="specification" column="Commodity.`specification`" />
		<result property="status" column="Commodity.`status`" />
		<result property="is_delete" column="Commodity.`is_delete`" />
	</resultMap>

	<select id="getAllShopCommodityByName" resultType="Commodity"
		parameterType="java.lang.String">
		SELECT
		Commodity.ID,
		Commodity.modify_time,
		Commodity.introduction,
		Commodity.`name`,
		Commodity.`image`,
		Commodity.`price`,
		Commodity.`storage`,
		Commodity.`specification`,
		Commodity.`status`,
		Commodity.`is_delete`
		FROM
		commodity
		INNER JOIN
		shop_commodity ON commodity.ID =
		shop_commodity.commodity_id
		INNER JOIN
		shop ON shop.ID =
		shop_commodity.shop_id
		WHERE
		commodity.is_delete=0 AND
		shop_commodity.isDelete=0 AND
        commodity.name LIKE #{name}
	</select>

	<select id="getSalesItem" resultType="Commodity"
			parameterType="java.lang.String">
		SELECT
		Commodity.ID,
		Commodity.modify_time,
		Commodity.introduction,
		Commodity.`name`,
		Commodity.`image`,
		Commodity.`price`,
		Commodity.`storage`,
		Commodity.`specification`,
		Commodity.`status`,
		Commodity.`is_delete`
		FROM
		commodity
		INNER JOIN
		activity_commodity ON commodity.ID =
		activity_commodity.commodity_id
		WHERE
		commodity.is_delete=0 AND
		activity_commodity.is_delete=0 AND
        activity_commodity.activity_id = #{aID}
	</select>
</mapper>